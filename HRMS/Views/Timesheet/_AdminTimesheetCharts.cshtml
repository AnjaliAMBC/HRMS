@model HRMS.Models.Timesheet

@{
    var dataPointsArray1 = new List<HRMS.Models.Graph>();
    var dataPointsArray2 = new List<HRMS.Models.Graph>();

    var dataPointsArray3 = new List<HRMS.Models.Graph>();
    var dataPointsArray4 = new List<HRMS.Models.Graph>();
    var dataPointsArray5 = new List<HRMS.Models.Graph>();

    decimal totalHoursSpent = 0;
    decimal totalOverTime = 0;

    var weekLabels = new List<string>();

    var weeksModel = new List<HRMS.Models.WeekDateModel>();

    var totalHoursArray = new List<decimal>();
    var overtimeHoursArray = new List<decimal>();





}

<script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<div class="admin-timesheet-graph-header">
    <span class="admin-timesheet-graph-resourcename"><span class="admin-timesheet-graph-resourcename-title">Resource Name </span> <span class="admin-timesheet-graph-resourcename-info">@Model.SelectedEmployee.EmployeeID @Model.SelectedEmployee.EmployeeName</span></span>
    <span class="admin-timesheet-graph-reportingmanager"><span class="admin-timesheet-graph-reportingmanager-title">Reporting Manager </span> <span class="admin-timesheet-graph-reportingmanager-info">
    @(!string.IsNullOrEmpty(Model.SelectedClient?.ReportingManager)
            ? Model.SelectedClient.ReportingManager
            : "N/A")
</span></span>
</div>
<div class="admin-timesheet-graph-body">
    <div class="admin-timesheet-hours-spent">
        <div class="admin-timesheet-block-content admin-timesheet-block-bar">
            <div id="admin-timesheet-hours-spent" style="height: 270px; width: 100%;"></div>
        </div>
    </div>
    <div class="admin-timesheet-attendance">
        <div class="admin-timesheet-block-content admin-timesheet-block-donut">
            <div class="admin-timesheet-block-donut-title">Hours Spent</div>
            <canvas id="admin-timesheet-attendance" style="width:100%;max-width:100%"></canvas>
        </div>
    </div>
</div>

@if (Model.WeeklyReport)
{
    foreach (var weekinfo in Model.WeekInfo)
    {
        dataPointsArray1.Add(weekinfo.DataPoints1[0]);
        dataPointsArray2.Add(weekinfo.DataPoints2[0]);
        dataPointsArray3.Add(weekinfo.DataPoints3[0]);
        dataPointsArray4.Add(weekinfo.DataPoints4[0]);
        dataPointsArray5.Add(weekinfo.DataPoints5[0]);
        totalHoursSpent += weekinfo.HoursSpent;
        totalOverTime += weekinfo.OverTime;
    }
}
else
{

    DateTime startDate = Model.WeekStartDate;
    DateTime endDate = Model.WeekEndDate;

    int totalWeeks = 0;
    DateTime currentStartDate = startDate;

    while (currentStartDate <= endDate)
    {
        DateTime weekEndDate = currentStartDate.AddDays(6);
        if (weekEndDate > endDate)
        {
            weekEndDate = endDate;
        }

        totalWeeks++;
        var weekLabel = "Week " + totalWeeks;
        weekLabels.Add(weekLabel);

        weeksModel.Add(new HRMS.Models.WeekDateModel()
        {
            StartDate = currentStartDate,
            EndDate = weekEndDate
        });

        currentStartDate = weekEndDate.AddDays(1);
    }

    foreach (var date in weeksModel)
    {
        var weekwiseRecords = Model.WeekInfo.Where(x => x.Date >= date.StartDate && x.Date <= date.EndDate).ToList();

        decimal weekHoursSpent = 0;
        decimal weekOverTime = 0;
        foreach (var record in weekwiseRecords)
        {
            weekHoursSpent += record.HoursSpent;
            weekOverTime += record.OverTime;
        }

        totalHoursArray.Add(weekHoursSpent);
        overtimeHoursArray.Add(weekOverTime);

        totalHoursSpent += weekHoursSpent;
        totalOverTime += weekOverTime;
    }



}





@if (Model.WeeklyReport)
{
    <script>

    var dataPoints1 = @Html.Raw(Json.Encode(dataPointsArray1));
        var dataPoints2 = @Html.Raw(Json.Encode(dataPointsArray2));
        var dataPoints3 = @Html.Raw(Json.Encode(dataPointsArray3));
        var dataPoints4 = @Html.Raw(Json.Encode(dataPointsArray4));
        var dataPoints5 = @Html.Raw(Json.Encode(dataPointsArray5));

    var chart = new CanvasJS.Chart("admin-timesheet-hours-spent", {
            axisY: {
                suffix: " h",
                interval: 2,
                minimum: 0,
                gridThickness: 0,
                lineThickness: 0
            },
            data: [
                {
                    type: "stackedColumn",
                    name: "Leave",
                    showInLegend: false,
                    color: "#FF5733",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints1
                },
                {
                    type: "stackedColumn",
                    name: "Hoilday",
                    showInLegend: false,
                    color: "#FFC300",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints2
                },
                {
                    type: "stackedColumn",
                    name: "Week End",
                    showInLegend: false,
                    color: "#3e4652",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints3
                },
                {
                    type: "stackedColumn",
                    name: "Hours Spent",
                    showInLegend: false,
                    color: "#92d050",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints4
                },
                {
                    type: "stackedColumn",
                    name: "Overtime",
                    showInLegend: false,
                    color: "#00B4F2",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints5
                }

            ]
        });
        chart.render();

        function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            } else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }
    </script>
}
else
{
    <script>

    var weekLabels = @Html.Raw(Json.Encode(weekLabels));
    var totalHoursArray = @Html.Raw(Json.Encode(totalHoursArray));
    var overtimeHoursArray = @Html.Raw(Json.Encode(overtimeHoursArray));

    var dataPoints1 = [];
    var dataPoints2 = [];
    var dataPoints3 = [];

    for (var i = 0; i < weekLabels.length; i++) {
        dataPoints1.push({ label: weekLabels[i], y: totalHoursArray[i] });
        dataPoints2.push({ label: weekLabels[i], y: overtimeHoursArray[i] });
        dataPoints3.push({ label: weekLabels[i], y: totalHoursArray[i] + overtimeHoursArray[i] });
    }

    var chart = new CanvasJS.Chart("admin-timesheet-hours-spent", {
        axisY: {
            suffix: " h",
            interval: 5,
            minimum: 0,
            gridThickness: 0,
            lineThickness: 0
        },
        data: [
            {
                type: "stackedColumn",
                name: "Total Hours",
                showInLegend: true,
                color: "#92d050",
                yValueFormatString: "#,##0 h",
                dataPoints: dataPoints1
            },
            {
                type: "stackedColumn",
                name: "Overtime Hours",
                showInLegend: true,
                color: "#00B4F2",
                yValueFormatString: "#,##0 h",
                dataPoints: dataPoints2
            },
            //{
            //    type: "stackedColumn",
            //    name: "Combined Hours",
            //    showInLegend: true,
            //    color: "#FFC300", // Yellow color for Combined Hours (Total + Overtime)
            //    yValueFormatString: "#,##0 h",
            //    dataPoints: dataPoints3
            //}
        ]
    });

    // Render the chart
    chart.render();

    // Optional: Function to toggle data series visibility
    function toggleDataSeries(e) {
        if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
            e.dataSeries.visible = false;
        } else {
            e.dataSeries.visible = true;
        }
        chart.render();
    }
    </script>

}




<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<script>
    var xValues = ["Hours Spent", "Overtime"];
    var yValues = [@totalHoursSpent, @totalOverTime];
    var barColors = [
        "#92d050",
        "#00B4F2"
    ];

    var attendanceChart = new Chart("admin-timesheet-attendance", {
        type: "doughnut",
        data: {
            labels: xValues,
            datasets: [{
                backgroundColor: barColors,
                data: yValues
            }]
        },
        options: {
            legend: {
                display: true,
                position: 'bottom'
            },
            // Disable hover effects
            hover: {
                mode: null // Disable hover mode
            },
            // Disable animations if you want it to load instantly without hover effects
            animation: {
                duration: 0 // Disable animations on hover
            }
        }
    });

</script>