@model HRMS.Models.Timesheet

@{
    ViewBag.Title = "AdminTimesheetView";
    var defaultSelectedClient = "";

}
@Html.Partial("_NavBar")
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<div class="container-fluid res-admin-timesheet">
    <div class="hiddenadmindashboard" style="display: none"></div>
    @Html.Partial("_adminsidemenu")
    <div class="main-content container-fluid AdminTimesheet-View">
        <div class="content admin-timesheet-list">
            <div class="container-fluid admin-timesheet">
                <div class="admin-timesheet-container">

                    <div class="row admin-timesheet-header">
                        <div class="admin-timesheet-header-title">
                            <h4>Timesheet</h4>
                        </div>
                        <div class="admin-timesheet-header-right ml-auto">
                            <span class="admin-timesheet-header-report">
                                <select class="form-control" id="admin-timesheet-report">
                                    <option value="WeeklyReport">Weekly Report</option>
                                    <option value="MonthlyReport">Monthly Report</option>
                                </select>
                            </span>
                            <button type="button" class="btn btn-primary btn-admin-timesheet-sendremainder" data-toggle="modal" data-target="#adminTimesheetSendRemainderModal"><img src="~/Assets/remainder-icon.png">Send Remainder</button>
                        </div>
                    </div>

                    <div class="admin-timesheet-content">
                        <div class="emp-timesheet-details timesheet-nav" id="adminTimesheet">
                            <div class="admin-timesheet-header-block">
                                <div class="admin-timesheet-header-block-left">
                                    <div class="admin-timesheet-block1" data-weekstartdate="@Model.WeekStartDate.ToString("dd MMMM yyyy")" data-weekenddate="@Model.WeekEndDate.ToString("dd MMMM yyyy")" data-weeknumber="@Model.Weeknumber">
                                        <span class="admin-timesheet-weekno" id="admin-view-week-number">Week @Model.Weeknumber</span>
                                        <select class="form-control admin-timesheet-weekno" id="admin-year-dropdown" style="display: none; width: 120px">
                                            <!-- Dynamically populated years -->
                                        </select>
                                        <span class="admin-timesheet-weekrange-info">
                                            <i class="fa fa-angle-left" aria-hidden="true" id="admin-view-prev-week"></i>
                                            <span class="admin-timesheet-weekrange">
                                                <span id="admin-view-week-start">
                                                    @Model.WeekStartDate.ToString("dd MMMM yyyy")
                                                </span><i class="fa fa-long-arrow-right" aria-hidden="true"></i> <span id="admin-view-week-end">@Model.WeekEndDate.ToString("dd MMMM yyyy")</span>
                                            </span>
                                            <i class="fa fa-angle-right" aria-hidden="true" id="admin-view-next-week"></i>
                                        </span>
                                    </div>
                                    <div class="admin-timesheet-block2">
                                        <div class="form-group col-lg-12 div-timesheet-company">
                                            <select class="form-control" id="admintimesheetCompany">

                                                @foreach (var client in Model.WeekInfo[0].Clients)
                                                {
                                                    if (defaultSelectedClient == "")
                                                    {
                                                        defaultSelectedClient = client.ClientName;
                                                    }
                                                    <option value="@client.ClientName">@client.ClientName</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="admin-timesheet-block3">
                                        <div class="form-group col-lg-12 div-timesheet-employeename">
                                            <div class="dropdown">
                                                <a class="btn btn-outline-primary admintimesheet-dropdown-toggle" href="#" id="adminTimesheetDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    Select Employees <i class="fas fa-chevron-down ml-1"></i>
                                                </a>
                                                <div class="dropdown-menu admintimesheet-dropdown-menu dropdown-menu-wide p-3" aria-labelledby="adminTimesheetDropdown">
                                                    <input type="text" class="form-control mb-2" id="employeeSearch" placeholder="Search">
                                                    <div id="employeeList">
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="checkbox" value="" id="selectAll">
                                                            <label class="adminleavehistory-form-check-label" for="selectAll">
                                                                <span>Select All</span>
                                                            </label>
                                                        </div>
                                                        @{
                                                            var clientSpecifcEmployees = Model.Employees.Where(x => x.Client == defaultSelectedClient).ToList();
                                                        }

                                                        @foreach (var empClient in clientSpecifcEmployees)
                                                        {
                                                            <div class="form-check">
                                                                <input class="form-check-input" type="checkbox" value="" id="">
                                                                <label class="adminleavehistory-form-check-label" for="">
                                                                    <span>@empClient.EmployeeName - @empClient.EmployeeID</span>
                                                                    <div style="display: none">@empClient.EmployeeID</div>
                                                                </label>
                                                            </div>
                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="admin-timesheet-block4">
                                        <button type="button" class="btn btn-primary timesheet-View">View</button>
                                    </div>
                                </div>
                                <div class="admin-timesheet-header-block-right">
                                    <img src="~/Assets/Export.png">
                                </div>
                            </div>

                            <div class="admin-timesheet-graph-block">
                                @Html.Partial("~/Views/Timesheet/_AdminTimesheetCharts.cshtml", Model)

                            </div>

                            <div class="admin-timesheet-graph-arrows">
                                <span class="admin-timesheet-graph-leftarrow"><i class="far fa-arrow-alt-circle-left"></i></span>
                                <span class="admin-timesheet-graph-rightarrow"><i class="far fa-arrow-alt-circle-right"></i></span>
                            </div>
                        </div>

                        <div class="admin-timesheet-table-block">
                            @Html.Partial("~/Views/Timesheet/_AdminTimesheetrows.cshtml", Model)
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<!-- Timesheet Send Remainder Password Modal -->
<div id="adminTimesheetSendRemainderModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="adminTimesheetSendRemainderModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="empTicketConfirmCancelModalLabel">Send Remainder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="far fa-times-circle"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="admin-timesheetsendremainder-body table-responsive">

                </div>
                <div class="admin-timesheet-sendremainder-notes">
                    <span style="font-weight: bold;">Note:</span>  Send remainder for all the selected employees in single/group email
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-ticketname="" id="adminTimesheetSendRemainderSubmitButton">Send Remainder</button>
            </div>

            <div id="reminderStatusMessage" class="alert" style="display: none;"></div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        $(document).on('keyup', '#employeeSearch', function () {
            var value = $(this).val().toLowerCase();
            $('#employeeList .form-check').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        $(document).on('change', '#selectAll', function () {
            var checked = $(this).is(':checked');
            $('#employeeList .form-check-input').not('#selectAll').prop('checked', checked);
            updateSelectedEmployees();
        });

        function SelectedEmployeeIDs() {
            let selectedEmployeeids = [];
            $('#employeeList .form-check-input:checked').not('#selectAll').each(function () {
                let employeeName = $(this).siblings('label').find('div').text();
                selectedEmployeeids.push(employeeName);
            });
            return selectedEmployeeids;
        }

        function updateSelectedEmployees() {
            let selectedEmployees = [];
            $('#employeeList .form-check-input:checked').not('#selectAll').each(function () {
                let employeeName = $(this).siblings('label').find('span').text();
                selectedEmployees.push(employeeName);
            });

            let buttonText = 'Select Employees';
            if (selectedEmployees.length > 0) {
                if (selectedEmployees.length === 1) {
                    buttonText = selectedEmployees[0];
                } else {
                    buttonText = selectedEmployees.length + ' employees selected';
                }
            }
            $('#adminTimesheetDropdown').html(buttonText + ' <i class="fas fa-chevron-down ml-1"></i>');
        }

        $(document).on('change', '#employeeList .form-check-input', function () {
            updateSelectedEmployees();
        });

        function filterTable(table) {
            var selectedEmployees = [];
            $('#employeeList .form-check-input:checked').not('#selectAll').each(function () {
                selectedEmployees.push($(this).attr('id'));
            });
        }

        let currentTimeSheetIndex = 0;
        let timesheetselectedEmployeeIds = [];

        function GetFirstEmployeeTimesheet() {
            timesheetselectedEmployeeIds = [];
            timesheetselectedEmployeeIds = SelectedEmployeeIDs();
            currentTimeSheetIndex = 0;
            if (timesheetselectedEmployeeIds.length > 0) {
                let firstEmployeeId = timesheetselectedEmployeeIds[currentTimeSheetIndex];
                loadEmployeeTimesheet(firstEmployeeId);
            }
        }

        $(document).on('click', '.timesheet-View', function () {
            GetFirstEmployeeTimesheet();
        });

        function loadEmployeeTimesheet(employeeId) {
            let client = $('#admintimesheetCompany').val();
            let startDate = $('.admin-timesheet-block1').data("weekstartdate");
            let endDate = $('.admin-timesheet-block1').data("weekenddate");
            let isweek = $('#admin-timesheet-report').val() == "WeeklyReport" ? true : false;
            $.ajax({
                url: '/timesheet/getemployeetimesheet',
                type: 'GET',
                data: { client: client, employeeId: employeeId, startdate: startDate, endDate: endDate, isweek: isweek },
                beforeSend: function () {
                    $('.show-progress').show();
                },
                success: function (response) {
                    $('.admin-timesheet-graph-block').html(response.graphBlockHtml);
                    $('.admin-timesheet-table-block').html(response.tableBlockHtml);
                    $('.show-progress').hide();
                },
                error: function () {
                    $('.show-progress').hide();
                }
            });
        }

        $(document).on('click', '.admin-timesheet-graph-leftarrow', function () {
            if (currentTimeSheetIndex > 0) {
                currentTimeSheetIndex--;
                loadEmployeeTimesheet(timesheetselectedEmployeeIds[currentTimeSheetIndex]);
            }
        });

        $(document).on('click', '.admin-timesheet-graph-rightarrow', function () {
            if (currentTimeSheetIndex < timesheetselectedEmployeeIds.length - 1) {
                currentTimeSheetIndex++;
                loadEmployeeTimesheet(timesheetselectedEmployeeIds[currentTimeSheetIndex]);
            }
        });

        function formatDateToLong(date) {
            var day = date.getDate();
            var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            var month = monthNames[date.getMonth()];
            var year = date.getFullYear();
            return (day < 10 ? '0' + day : day) + ' ' + month + ' ' + year;
        }

        function getWeekNumber(date) {
            var startDate = new Date(date.getFullYear(), 0, 1);
            var diff = date - startDate;
            var oneDay = 1000 * 60 * 60 * 24;
            var dayOfYear = Math.floor(diff / oneDay);
            return Math.ceil((dayOfYear + 1) / 7);
        }

        function getStartEndDateOfWeek(date) {
            var start = new Date(date);
            var end = new Date(date);
            var day = start.getDay();
            var diff = start.getDate() - day + (day == 0 ? -6 : 1);
            start.setDate(diff);
            end.setDate(start.getDate() + 6);
            return {
                startDate: start,
                endDate: end
            };
        }

        function updateYearDropdown(year) {
            const yearDropdown = $("#admin-year-dropdown");
            if (!yearDropdown.find(`option[value="${year}"]`).length) {
                populateYearDropdown();
            }
            yearDropdown.val(year);
        }


        function updateViewWeek(date, isWeekly) {
            var startDate, endDate, weekNumber;
            if (isWeekly) {
                var weekData = getStartEndDateOfWeek(date);
                startDate = weekData.startDate;
                endDate = weekData.endDate;
                weekNumber = getWeekNumber(startDate);
                $('#admin-view-week-number').text('Week ' + weekNumber);
            } else {

                startDate = new Date(date.getFullYear(), date.getMonth(), 1);
                endDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);
                $('#admin-view-week-number').text(startDate.toLocaleString("en-US", { month: "long" }) + ' ' + startDate.getFullYear());
            }

            var formattedStartDate = formatDateToLong(startDate);
            var formattedEndDate = formatDateToLong(endDate);
            $('#admin-view-week-start').text(formattedStartDate);
            $('#admin-view-week-end').text(formattedEndDate);

            $('.admin-timesheet-block1').attr("data-weekstartdate", formattedStartDate);
            $('.admin-timesheet-block1').attr("data-weekenddate", formattedEndDate);

            if (!isWeekly) {
                updateYearDropdown(startDate.getFullYear());
            }

            GetFirstEmployeeTimesheet();
        }

        $(document).on('click', '#admin-view-prev-week', function (event) {
            event.preventDefault();
            var isWeekly = $("#admin-timesheet-report").val() === "WeeklyReport";
            var startDate = new Date($('#admin-view-week-start').text().split(' ').reverse().join(' '));
            if (isWeekly) {
                startDate.setDate(startDate.getDate() - 7);
            } else {
                startDate.setMonth(startDate.getMonth() - 1);
                startDate.setDate(1);
            }
            updateViewWeek(startDate, isWeekly);
        });


        $(document).on('click', '#admin-view-next-week', function (event) {
            event.preventDefault();
            var isWeekly = $("#admin-timesheet-report").val() === "WeeklyReport";
            var startDate = new Date($('#admin-view-week-start').text().split(' ').reverse().join(' '));
            if (isWeekly) {
                startDate.setDate(startDate.getDate() + 7);
            } else {
                startDate.setMonth(startDate.getMonth() + 1);
                startDate.setDate(1);
            }
            updateViewWeek(startDate, isWeekly);
        });

        function populateYearDropdown() {
            const currentYear = new Date().getFullYear();
            const yearDropdown = $("#admin-year-dropdown");

            yearDropdown.empty();
            yearDropdown.append(`<option value="${currentYear - 2}">${currentYear - 2}</option>`);
            yearDropdown.append(`<option value="${currentYear - 1}">${currentYear - 1}</option>`);
            yearDropdown.append(`<option value="${currentYear}" selected>${currentYear}</option>`);
            yearDropdown.append(`<option value="${currentYear + 1}">${currentYear + 1}</option>`);
        }

        function setMonthStartAndEndDates(year) {
            const startDate = new Date(year, new Date().getMonth(), 1);
            const endDate = new Date(year, new Date().getMonth() + 1, 0);
            $("#admin-view-week-start").text(formatDateToLong(startDate));
            $("#admin-view-week-end").text(formatDateToLong(endDate));
            $(".admin-timesheet-block1").attr("data-weekstartdate", formatDateToLong(startDate));
            $(".admin-timesheet-block1").attr("data-weekenddate", formatDateToLong(endDate));
        }

        $("#admin-timesheet-report").on("change", function () {
            const selectedReportType = $(this).val();

            if (selectedReportType === "MonthlyReport") {
                $('.btn-admin-timesheet-sendremainder').attr("disabled", true);
                $("#admin-view-week-number").hide();
                $("#admin-year-dropdown").show();
                const currentYear = new Date().getFullYear();
                populateYearDropdown();
                setMonthStartAndEndDates(currentYear);
            } else {
                $("#admin-view-week-number").show();
                $("#admin-year-dropdown").hide();
                updateViewWeek(new Date(), true);
                $('.btn-admin-timesheet-sendremainder').attr("disabled", false);
            }
        });

        $("#admin-year-dropdown").on("change", function () {
            const selectedYear = $(this).val();
            setMonthStartAndEndDates(selectedYear);
        });

        $(document).on('click', '.admin-timesheet-header-block-right img', function () {
            const client = $("#admintimesheetCompany").val();
            const weekStartDate = $(".admin-timesheet-block1").attr("data-weekstartdate");
            const weekEndDate = $(".admin-timesheet-block1").attr("data-weekenddate");
            const selectedEmployees = SelectedEmployeeIDs();
            var isWeekReport = $('#admin-timesheet-report').val() == "WeeklyReport" ? true : false;

            $.ajax({
                url: '/timesheet/exportselectedemployeestozip',
                type: 'POST',
                data: {
                    selectedEmployeeIDs: selectedEmployees,
                    weekstart: weekStartDate,
                    weekend: weekEndDate,
                    client: client,
                    weeklyreport: isWeekReport
                },
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (response, status, xhr) {

                    const disposition = xhr.getResponseHeader('Content-Disposition');
                    let filename = 'ExportedTimesheets.zip';
                    if (disposition && disposition.indexOf('attachment') !== -1) {
                        const filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                        const matches = filenameRegex.exec(disposition);
                        if (matches != null && matches[1]) {
                            filename = matches[1].replace(/['"]/g, '');
                        }
                    }
                    const blob = new Blob([response], { type: 'application/zip' });
                    const link = document.createElement('a');
                    link.href = URL.createObjectURL(blob);
                    link.download = filename;
                    link.click();
                },
                error: function (xhr, status, error) {
                    alert('Error exporting timesheet: ' + error);
                }
            });
        });

        $(document).on('click', '.btn-admin-timesheet-sendremainder', function () {
            var weekNumber = $('.admin-timesheet-block1').data("weeknumber");
            const client = $("#admintimesheetCompany").val();
            $('#adminTimesheetSendRemainderModal').modal("show");
            $.ajax({
                url: '/timesheet/timesheetremainders',
                type: 'GET',
                data: { client: client, weekNumber: weekNumber },
                beforeSend: function () {
                    $('.show-progress').show();
                },
                success: function (response) {
                    $('.admin-timesheetsendremainder-body').html(response);
                    $('.show-progress').hide();
                },
                error: function () {
                    $('.show-progress').hide();
                }
            });
        });

        $('#adminTimesheetSendRemainderSubmitButton').click(function () {
            var selectedEmployees = [];

            $('#timehseerreaminderemp:checked').each(function () {
                var $row = $(this).closest('tr');

                var employeeId = $row.find('.timesheet-empid').text().trim();
                var employeeName = $row.find('.timesheet-empname').text().trim();
                var empEmail = $(this).data('empemail');
                var weekstartdate = $('.admin-timesheet-block1').data("weekstartdate");
                var weekenddate = $('.admin-timesheet-block1').data("weekenddate");


                selectedEmployees.push({
                    EmployeeID: employeeId,
                    EmployeeName: employeeName,
                    EmployeeEmail: empEmail,
                    WeekStartDate: weekstartdate,
                    WeekEndDate: weekenddate
                });
            });

            // Check if any employees are selected
            if (selectedEmployees.length > 0) {
                $.ajax({
                    url: '/timesheet/sendreminderemail',
                    type: 'POST',
                    data: {
                        selectedEmployees: selectedEmployees // Send the selected employees as data
                    },
                    success: function (response) {
                        var statusMessage = $('#reminderStatusMessage');
                        if (response.success) {
                            statusMessage.removeClass('alert-danger').addClass('alert-success')
                                .text('Reminder sent successfully to the selected employees!').show();
                        } else {
                            statusMessage.removeClass('alert-success').addClass('alert-danger')
                                .text('Failed to send reminder. Please try again.').show();
                        }
                    },
                    error: function (xhr, status, error) {
                        var statusMessage = $('#reminderStatusMessage');
                        statusMessage.removeClass('alert-success').addClass('alert-danger')
                            .text('An error occurred while sending the reminder.').show();
                    }
                });
            }
        });




    });
</script>
