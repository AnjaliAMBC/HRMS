@model HRMS.Models.Timesheet

@{
    var dataPointsArray1 = new List<HRMS.Models.Graph>();
    var dataPointsArray2 = new List<HRMS.Models.Graph>();

    var dataPointsArray3 = new List<HRMS.Models.Graph>();
    var dataPointsArray4 = new List<HRMS.Models.Graph>();
    var dataPointsArray5 = new List<HRMS.Models.Graph>();

    decimal totalHoursSpent = 0;
    decimal totalOverTime = 0;

    var timeSheetSubmitEnabled = false;
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>

<div class="admin-timesheet-slider">
    <div class="admin-timesheet-graph-block">
        <div class="admin-timesheet-graph-header">
            <span class="admin-timesheet-graph-resourcename"><span class="admin-timesheet-graph-resourcename-title">Resource Name </span> <span class="admin-timesheet-graph-resourcename-info">1122 Test User</span></span>
            <span class="admin-timesheet-graph-reportingmanager"><span class="admin-timesheet-graph-reportingmanager-title">Reporting Manager </span> <span class="admin-timesheet-graph-reportingmanager-info">Shanta M Balakumar</span></span>
        </div>
        <div class="admin-timesheet-graph-body">
            <div class="admin-timesheet-hours-spent">
                <div class="admin-timesheet-block-content admin-timesheet-block-bar">
                    <div id="admin-timesheet-hours-spent" style="height: 270px; width: 100%;"></div>
                </div>
            </div>
            <div class="admin-timesheet-attendance">
                <div class="admin-timesheet-block-content admin-timesheet-block-donut">
                    <div class="admin-timesheet-block-donut-title">Hours Spent</div>
                    <canvas id="admin-timesheet-attendance" style="width:100%;max-width:100%"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="admin-timesheet-graph-arrows">
        <span class="admin-timesheet-graph-leftarrow"><i class="far fa-arrow-alt-circle-left"></i></span>
        <span class="admin-timesheet-graph-rightarrow"><i class="far fa-arrow-alt-circle-right"></i></span>
    </div>
    <div class="admin-timesheet-table-block">
        <div class="admin-timesheet-table-body">
            <div class="admin-timesheet-body table-responsive">
                <table id="admintimesheetlistingTable" class="table admin-timesheet-table" style="width: 100%; color: #272727">
                    <thead style=" background-color: #3E78CF; border-radius: 10px;">
                        <tr>
                            <th>Date</th>
                            <th>Category</th>
                            <th>Task/Incident Name</th>
                            <th>Task/Incident Description</th>
                            <th>Priority</th>
                            <th>Requester</th>
                            <th>Status</th>
                            <th>Total Hours</th>
                        </tr>
                    </thead>
                    <tbody id="admintimesheetBody">
                        @foreach (var weekinfo in Model.WeekInfo)
                        {
                            foreach (var timeSheet in weekinfo.TimeSheets.Where(x => x.HoursSpent > 0))
                            {
                                <tr>
                                    <td>@(timeSheet.Date.HasValue ? timeSheet.Date.Value.ToString("dd-MM-yyyy") : "N/A")</td>
                                    <td>@timeSheet.Category</td>
                                    <td>@timeSheet.IncidentTaskName</td>
                                    <td>@timeSheet.IncidentTaskDescription</td>
                                    <td>@timeSheet.Priority</td>
                                    <td>@timeSheet.Requester</td>
                                    <td>@timeSheet.Status</td>
                                    <td>@timeSheet.HoursSpent</td>
                                </tr>
                            }

                            dataPointsArray1.Add(weekinfo.DataPoints1[0]);
                            dataPointsArray2.Add(weekinfo.DataPoints2[0]);
                            dataPointsArray3.Add(weekinfo.DataPoints3[0]);
                            dataPointsArray4.Add(weekinfo.DataPoints4[0]);
                            dataPointsArray5.Add(weekinfo.DataPoints5[0]);
                            totalHoursSpent += weekinfo.HoursSpent;
                            totalOverTime += weekinfo.OverTime;
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>

<script>
    $(document).ready(function () {
        var dataPoints1 = @Html.Raw(Json.Encode(dataPointsArray1));
        var dataPoints2 = @Html.Raw(Json.Encode(dataPointsArray2));
        var dataPoints3 = @Html.Raw(Json.Encode(dataPointsArray3));
        var dataPoints4 = @Html.Raw(Json.Encode(dataPointsArray4));
        var dataPoints5 = @Html.Raw(Json.Encode(dataPointsArray5));

        var chart = new CanvasJS.Chart("admin-timesheet-hours-spent", {
            axisY: {
                suffix: " h",
                interval: 2,
                minimum: 0,
                gridThickness: 0,
                lineThickness: 0
            },
            data: [
                {
                    type: "stackedColumn",
                    name: "Leave",
                    showInLegend: false,
                    color: "#FF5733",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints1
                },
                {
                    type: "stackedColumn",
                    name: "Hoilday",
                    showInLegend: false,
                    color: "#FFC300",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints2
                },
                {
                    type: "stackedColumn",
                    name: "Week End",
                    showInLegend: false,
                    color: "#3e4652",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints3
                },
                {
                    type: "stackedColumn",
                    name: "Hours Spent",
                    showInLegend: false,
                    color: "#33FF57",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints4
                },
                {
                    type: "stackedColumn",
                    name: "Overtime",
                    showInLegend: false,
                    color: "#50aced",
                    yValueFormatString: "#,##0 h",
                    dataPoints: dataPoints5
                }

            ]
        });
        chart.render();

        function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            } else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }

        $('.admin-timesheet-graph-leftarrow').click(function (e) {
            console.log('sdsd');

        });

        $('.admin-timesheet-graph-rightarrow').click(function (e) {
            console.log('sdsd');

        });


    });
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<script>
    var xValues = ["Hours Spent", "Overtime"];
    var yValues = [@totalHoursSpent, @totalOverTime];
    var barColors = [
        "#33FF57",
        "#50aced"
    ];

    // Create the chart
    var attendanceChart = new Chart("admin-timesheet-attendance", {
        type: "doughnut",
        data: {
            labels: xValues,
            datasets: [{
                backgroundColor: barColors,
                data: yValues
            }]
        },
        options: {
            legend: {
                display: true,
                position: 'bottom'
            },
            // Disable hover effects
            hover: {
                mode: null // Disable hover mode
            },
            // Disable animations if you want it to load instantly without hover effects
            animation: {
                duration: 0 // Disable animations on hover
            }
        }
    });

    // Reload button click event
    function reloadHoursSpent() {
        // Generate new random data
        yValues = [Math.random() * 20, Math.random() * 5]; // Replace with dynamic data

        // Update chart data
        attendanceChart.data.datasets[0].data = yValues;

        // Re-render the chart
        attendanceChart.update();
    }

</script>

<script>
    $(document).ready(function () {

        @*$('#admintimesheetEmployeeName').select2();*@

        var table = $('#admintimesheetlistingTable').DataTable({
            "paging": true,
            "searching": false,
            "ordering": false,
            "info": true,
            "autoWidth": false,
        });

        // Employee search filter
        $(document).on('keyup', '#employeeSearch', function () {
            var value = $(this).val().toLowerCase();
            $('#employeeList .form-check').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        // Select All functionality in employee list
        $(document).on('change', '#selectAll', function () {
            var checked = $(this).is(':checked');
            $('#employeeList .form-check-input').not('#selectAll').prop('checked', checked);
            updateSelectedEmployees(); // Update the selected employees text
            filterTable(table);
        });

        // Function to update selected employees in button text
        function updateSelectedEmployees() {
            let selectedEmployees = [];
            $('#employeeList .form-check-input:checked').not('#selectAll').each(function () {
                let employeeName = $(this).siblings('label').find('span').text();
                selectedEmployees.push(employeeName);
            });

            // Update button text with selected employees
            let buttonText = 'Select Employees';
            if (selectedEmployees.length > 0) {
                if (selectedEmployees.length === 1) {
                    buttonText = selectedEmployees[0];
                } else {
                    buttonText = selectedEmployees.length + ' employees selected';
                }
            }
            $('#adminTimesheetDropdown').html(buttonText + ' <i class="fas fa-chevron-down ml-1"></i>');
        }

        // Event handler for checkbox change
        $(document).on('change', '#employeeList .form-check-input', function () {
            updateSelectedEmployees();
            filterTable(table);
        });

        function filterTable(table) {
            var selectedEmployees = [];
            $('#employeeList .form-check-input:checked').not('#selectAll').each(function () {
                selectedEmployees.push($(this).attr('id'));
            });
        }

    });
</script>

