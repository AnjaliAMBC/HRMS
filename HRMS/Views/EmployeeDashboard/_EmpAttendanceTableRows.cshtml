@model HRMS.Models.Employee.EmpAttedenceModel

<table id="attendanceTable" class="table table-attendence">
    <thead class="attendence-thead">
        <tr>
            <th scope="col">Date</th>
            <th scope="col" style="text-align: center;">Check In - Check Out</th>
            <th scope="col">Hours</th>
            <th scope="col">Status</th>
        </tr>
    </thead>
    <tbody class="empatt-body">
        @foreach (DateTime date in Model.AllDates)
        {
            var isWeekendDate = date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday;
            var weekendtext = "";
            if (isWeekendDate)
            {
                weekendtext = "Weekend";
            }

            var isCheckInExists = Model.AttedenceList.Where(x => x.Login_date == date).FirstOrDefault();
            var empLeave = Model.Leaves.Where(x => x.leavedate == date && (x.LeaveStatus != "Rejected" && x.LeaveStatus != "Cancelled")).FirstOrDefault();
            var holiday = Model.holidaysList.FirstOrDefault(h => h.holiday_date == date); // Check if the date is a holiday

            if (isCheckInExists != null)
            {
                string starttimeWithAmPm = isCheckInExists.Signin_Time.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);
                string endtimeWithAmPm = isCheckInExists.Signout_Time?.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);

                string statusType = "bar-width-green";
                string buttonColor = "present-btn";
                string attedenceType = "Present";
                string attedenceActualType = "Present";
                int hours = 00;
                int minutes = 00;

                if (endtimeWithAmPm != null)
                {
                    DateTime? endTime = isCheckInExists.Signout_Time;
                    TimeSpan? timeDifference = endTime - isCheckInExists.Signin_Time;
                    hours = (int)timeDifference?.TotalHours;
                    minutes = (int)timeDifference?.Minutes;
                }
                else if (isCheckInExists.Login_date == DateTime.Today)
                {
                    TimeSpan? timeDifference = DateTime.Now - isCheckInExists.Signin_Time;
                    hours = (int)timeDifference?.TotalHours;
                    minutes = (int)timeDifference?.Minutes;
                }

                if (empLeave != null)
                {
                    if (empLeave.DayType == "fullDay")
                    {
                        statusType = "bar-width-red";
                        attedenceType = "Leave";
                        attedenceActualType = empLeave.leavesource;
                        buttonColor = "leave-btn";
                    }
                    else if (empLeave.DayType == "halfDay")
                    {
                        buttonColor = empLeave.HalfDayCategory == "First Half" ? "firsthalf-leave-button" : "secondhalf-leave-button";
                        statusType = empLeave.HalfDayCategory == "First Half" ? "bar-width-firsthalf-leave" : "bar-width-second-leave";
                        attedenceType = "H/D Leave";
                    }
                    else
                    {
                        statusType = "bar-width-yellow";
                        attedenceType = "Permission";
                        buttonColor = "yellow-btn";
                    }
                }

                <tr>
                    <th scope="row">@isCheckInExists.Login_date.ToString("dd MMMM yyyy") <br><span class="fntblur">@isCheckInExists.Login_date.ToString("dddd", System.Globalization.CultureInfo.InvariantCulture)</span></th>
                    <td style="padding: 6px 30px" class="bar-wi bar-wd">
                        <div class="progress attendance-bar bar">
                            <div class="progress-bar @statusType" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="10"></div>
                            <span class="bar-time">@starttimeWithAmPm - @endtimeWithAmPm</span>
                            <div class="progress-bar @statusType" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="10"></div>
                        </div>
                    </td>
                    <td class="bar-wd">@hours.ToString("00").Trim()h:@minutes.ToString("00").Trim()m</td>
                    <td><button class="@buttonColor" style="pointer-events:none">@attedenceType</button></td>
                </tr>
            }
            else
            {
                string statusType = "bar-width-gray";
                string buttonColor = "gray-btn";
                string attedenceType = holiday != null ? "Holiday" : (isWeekendDate ? "Weekend" : "Absent");
                string attedenceActualType = holiday != null ? holiday.holiday_name : (isWeekendDate ? "Weekend" : "Absent");

                if (isWeekendDate)
                {
                    statusType = "bar-width-gray";
                    buttonColor = "gray-btn";
                }
                else if (holiday != null)
                {
                    statusType = "bar-width-yellow1";
                    buttonColor = "holiday-btn";
                }

                if (!isWeekendDate && holiday == null)
                {
                    if (empLeave != null)
                    {
                        if (empLeave.leavecategory.ToLowerInvariant().Contains("leave") || empLeave.leavecategory.ToLowerInvariant().Contains("comp off"))
                        {
                            statusType = "bar-width-red";
                            attedenceType = "Leave";
                            attedenceActualType = empLeave.leavesource;
                            buttonColor = "leave-btn";
                        }
                        else if (empLeave.leavecategory.ToLowerInvariant().Contains("permission"))
                        {
                            statusType = "bar-width-yellow";
                            attedenceType = "Permission";
                            buttonColor = "yellow-btn";
                        }
                    }
                    else
                    {
                        statusType = "bar-width-blue";
                        attedenceActualType = "Absent";
                        attedenceType = "Absent";
                        buttonColor = "absent-btn";
                    }
                }

                <tr>
                    <th scope="row">@date.ToString("dd MMMM yyyy") <br><span class="fntblur">@date.ToString("dddd", System.Globalization.CultureInfo.InvariantCulture)</span></th>
                    <td style="padding: 6px 30px" class="bar-wi bar-wd">
                        <div class="progress attendance-bar bar res-emp-attendance-@buttonColor">
                            <div class="progress-bar @statusType" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="10"></div>
                            <span class="bar-time">@attedenceActualType</span>
                            <div class="progress-bar @statusType" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="10"></div>
                        </div>
                    </td>
                    <td class="bar-wd">00h:00m</td>
                    <td><button class="@buttonColor" style="pointer-events:none">@attedenceType</button></td>
                </tr>
            }
        }
    </tbody>
</table>


<script>
    $(document).ready(function () {

        function refreshEmpAttedenceDataTable() {
            if (!$.fn.DataTable.isDataTable('#attendanceTable')) {
                @*$('#attendanceTable').DataTable({
                    "responsive": true,
                    "paging": true,
                    "searching": true,
                    "scrollY": '62vh',
                    "scrollCollapse": true,
                    "ordering": false,
                    "info": true,
                    "autoWidth": false,
                    "lengthMenu": [[14, 21, -1], [14, 21, "All"]],
                    "columnDefs": [
                        { "orderable": false, "targets": 1 }, // Disable ordering on the Checkin-Check-Out column
                        { "orderable": false, "targets": 3 }  // Disable ordering on the Status column
                    ]
                });*@
                $('#attendanceTable').DataTable({
                    "responsive": true,
                    "paging": true,
                    "searching": false,
                    "ordering": false,
                    "info": true,
                    "autoWidth": false,
                    "lengthMenu": [[10, 20, 50, -1], [10, 20, 50, "All"]]
                });
            }
        }

        refreshEmpAttedenceDataTable();

        $(document).on('ajaxComplete', function () {
            refreshEmpAttedenceDataTable();
        });

    });

</script>