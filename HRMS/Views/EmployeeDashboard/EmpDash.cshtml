@model HRMS.Models.Employee.EmpDashBoardModel
@using HRMS.Models

@{
    var loginID = 0;
    var buttonText = "Check-In";
    DateTime checkInTime = DateTime.MinValue;
    DateTime? checkOutTime = DateTime.MinValue;

    string starttimeWithAmPm = "";
    string endtimeWithAmPm = "";

    string lastCheckinDate = "";
    bool showCheckInButton = false;


    if (Model.empLastDayCheckInDetails != null && !Model.empLastDayCheckInDetails.IsSignedOutOnLastCheckInDate && Model.empLastDayCheckInDetails.LoginID != 0)
    {
        buttonText = "Check-Out";
        loginID = Model.empLastDayCheckInDetails.LoginID;

        checkInTime = Model.empLastDayCheckInDetails.SignInTime;
        checkOutTime = Model.empLastDayCheckInDetails.SignOutTime;

        lastCheckinDate = checkInTime.ToString("dd/MM/yyyy");
        starttimeWithAmPm = checkInTime.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);
        showCheckInButton = true;
    }

    var ButtonDisabled = "";

    if (Model.todayCheckInInfo != null && Model.todayCheckInInfo.login_id != 0)
    {
        loginID = Model.todayCheckInInfo.login_id;
        buttonText = "Check-Out";
        checkInTime = Model.todayCheckInInfo.Signin_Time;
        checkOutTime = Model.todayCheckInInfo.Signout_Time;

        if (checkOutTime != null && checkOutTime != DateTime.MinValue)
        {
            buttonText = "Check-In";
            ButtonDisabled = "disabled";
        }

        starttimeWithAmPm = checkInTime.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);
        endtimeWithAmPm = checkOutTime?.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);
    }
}
<div class="container-fluid mt-4 ml-4 employeedash">
    <h4>Dashboard</h4>
    <div class="row mt-4">
        <div class="col-md-4">
            <div class="card mb-3">
                <div class="card-header text-dark">Check In / Check Out</div>
                <div class="card-body chechin-body" style="padding: 1rem;">
                    <div class="day-date-time ml-2 mt-3">
                        <h5 id="day"></h5> <!-- Display day here -->
                        <div id="currentDate" class="time-input"></div> <!-- Replace input with div -->
                        <div id="currentTime" class="current-time mb-2"></div> <!-- Replace input with div -->
                    </div>

                    <div class="in-out mr-4 mt-3">
                        <div class="checkinhours">
                            <span class="totalhours">Hours:</span>
                            @{
                                var totalCheckInhours = Model.totalCheckedInTime;
                                var formattedCheckInTime = @checkInTime;
                            }

                            @if (!string.IsNullOrWhiteSpace(Model.totalCheckedInTime))
                            {
                                formattedCheckInTime = DateTime.MinValue;
                            }
                            @if (Model.totalCheckedInTime == "" && @Model.timerModel != null && @Model.timerModel.FormattedTime.ToString() != string.Empty)
                            {
                                totalCheckInhours = @Model.timerModel.FormattedTime.ToString();
                            }
                            <div id="checkinhoursminutes" data-signedindatetime="@formattedCheckInTime" style="color: blue">@totalCheckInhours</div>
                        </div>

                    </div>

                    <div class="in-out mr-4 mt-3">
                        <div class="check-time">
                            <span class="check-label">Check In time:</span>
                            <div id="checkInTime" class="time-input" style="color: blue"><span style="font-size: small">@lastCheckinDate</span>@starttimeWithAmPm</div>
                        </div>
                        <div class="check-time mt-2">
                            <span class="check-label">Check Out time:</span>
                            <div id="checkOutTime" class="time-input" style="color: blue">@endtimeWithAmPm</div> <!-- Replace input with div -->
                        </div>
                    </div>

                    <div class="current-time-display text-center">
                        <div id="currentTime" class="current-time"></div>
                    </div>
                    <span class="showcheckinbuttonpostcheckout" style="display: none">@showCheckInButton</span>
                    <div class="button-container text-left">
                        <button class="btn btn-checkin" data-checkinid="@loginID" @ButtonDisabled>@buttonText</button>
                    </div>
                </div>
            </div>
            <div class="card mb-3">
                <div class="card-header text-dark">Job Referral</div>
                <div class="card-body" style="padding:1rem;">
                    <p>Interior Designer <br> Location: Bangalore | Posted on: 10/05/2024</p>
                    <p>Business Analyst <br> Location: Madurai | Posted on: 10/05/2024</p>
                    <p>Jr. IT Recruiter <br> Location: Madurai | Posted on: 10/05/2024</p>
                </div>
            </div>
            <div class="card mb-3">
                <div class="card-header text-black">My Tickets</div>
                <div class="card-body" style="padding: 1rem;">
                    <p>System Not working <span class="badge badge-danger">High</span></p>
                    <p><small>Closed by Goutham Arunaigiri</small></p>
                </div>
            </div>
        </div>

        <div class="col-md-4">

            <div class="card mb-3">
                <div class="card-header text-dark">Birthdays</div>
                <div class="card-body" style="max-height: 222px; overflow-y: auto; padding:1rem; height:221px;">
                    @if (!Model.Birthdays?.Any() ?? true)
                    {
                        <div class="d-flex flex-column align-items-center justify-content-center">
                            <img src="~/Assets/Birthday.png" alt="No Birthdays" class="img-fluid mb-3" style="max-width: 133px;">
                            <p class="text-muted">No birthdays today</p>
                        </div>
                    }
                    else
                    {
                        <ul class="list-unstyled">
                            @foreach (var empBirthday in Model.Birthdays)
                            {
                                var empImageURl = System.Configuration.ConfigurationManager.AppSettings["EmpImagesFolder"] + "/" + empBirthday.imagePath;

                                <li class="media mb-3">
                                    <img src="@empImageURl" class="mr-3 rounded-circle" alt="Avatar" style="width: 50px; height: 50px;">
                                    <div class="media-body">
                                        <h5 class="mt-0 mb-1 empname">@empBirthday.EmpName</h5>
                                        <p><small>@empBirthday.Designation</small></p>
                                    </div>
                                    <small style="display: none" class="empemail">@empBirthday.EmpEmail</small>
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>

            <div class="card mb-3">
                <div class="card-header text-dark">Anniversaries</div>
                <div class="card-body" style="max-height: 243px; overflow-y: auto; padding: 1rem; height: 226px;">
                    @if (!Model.AnniversaryModel?.Any() ?? true)
                    {
                        <div class="d-flex flex-column align-items-center justify-content-center">
                            <img src="~/Assets/WorkAnni.jpg" alt="No Birthdays" class="img-fluid mb-3" style="max-width: 135px;">
                            <p class="text-muted">No anniversaries today.</p>
                        </div>
                    }
                    else
                    {

                        <ul class="list-unstyled">
                            @foreach (var anniversary in Model.AnniversaryModel)
                            {
                                var birthdayEmpImageURL = System.Configuration.ConfigurationManager.AppSettings["EmpImagesFolder"] + "/" + anniversary.imagePath;

                                <li class="media mb-3">
                                    <img src="@birthdayEmpImageURL" class="mr-3 rounded-circle" alt="Avatar" style="width: 50px; height: 50px;">
                                    <div class="media-body">
                                        <h5 class="mt-0 mb-1 empname">@anniversary.EmpName</h5>
                                        <p><small>@anniversary.Designation</small></p>
                                    </div>
                                    <small style="display: none" class="empemail">@anniversary.EmpEmail</small>
                                </li>
                            }
                        </ul>

                    }
                </div>
            </div>
            <div class="card mb-3">
                <div class="card-header text-dark">Employee Handbook</div>
                <div class="card-body" style="padding:1rem;">
                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum</p>
                    <button class="btn btn-secondary">View Handbook</button>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card mb-3">

                <div class="card-header calendar-header text-dark">
                    <div>
                        <i class="fas fa-chevron-left chevron-icon ml-4" onclick="prevMonth()"></i>
                    </div>
                    <div>
                        <h6 id="monthYear" class="mt-1"></h6>
                    </div>
                    <div>
                        <i class="fas fa-chevron-right chevron-icon mr-4" onclick="nextMonth()"></i>
                    </div>
                </div>
                <div class="card-body calendar-body" style="padding: 1rem;">
                    <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Mon</th>
                                <th scope="col">Tue</th>
                                <th scope="col">Wed</th>
                                <th scope="col">Thu</th>
                                <th scope="col">Fri</th>
                                <th scope="col">Sat</th>
                                <th scope="col">Sun</th>
                            </tr>
                        </thead>
                        <tbody id="calendarBody"></tbody>
                    </table>
                </div>
            </div>

            <div class="card mb-3">
                <div class="card-header text-dark">Upcoming Holidays</div>
                <div class="card-body" style="max-height: 300px; overflow-y: auto; ">
                    <ul class="list-unstyled" style="padding-left: 0;">
                        @foreach (HRMS.Models.EmployeeEvent.UpcomingHoliday holiday in @Model.UpcomingHolidays)
                        {
                            if (@holiday.HolidayDate != DateTime.MinValue)
                            {
                                <li style="padding-bottom: 10px;">
                                    <h6 style="margin-bottom: 0; font-size: 14px;">@holiday.HolidayName</h6>
                                    <small>@holiday.HolidayDate.ToString("dd MMMM dddd")</small>
                                </li>
                            }
                        }

                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card mb-3">
                <div class="box_topic pl-3 py-2">
                    Leaves
                </div>
                <div class="card-body box_body">
                    <div class="container text-center my-3 leave_container">
                        <div class="row mx-auto my-auto">
                            <div id="recipeCarousel" class="carousel slide w-100" data-ride="carousel">
                                <div class="carousel-inner w-100" role="listbox">
                                    <div class="carousel-item active">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-bereavement">BL</div>
                                                <h6 class="leave-title">Bereavement Leave</h6>
                                                <p class="leave-details">Available: 2</p>
                                                <p class="leave-details">Booked: 1</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-compensatory">CL</div>
                                                <h6 class="leave-title">Compensatory Off</h6>
                                                <p class="leave-details">Available: 0</p>
                                                <p class="leave-details">Booked: 0</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-earned">EL</div>
                                                <h6 class="leave-title">Earned Leave-Full Time</h6>
                                                <p class="leave-details">Available: 14</p>
                                                <p class="leave-details">Booked: 3</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-emergency">EL</div>
                                                <h6 class="leave-title">Emergency Leave</h6>
                                                <p class="leave-details">Available: 3</p>
                                                <p class="leave-details">Booked: 1</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-danger">SL</div>
                                                <h6 class="leave-title">Sick Leave</h6>
                                                <p class="leave-details">Available: 5</p>
                                                <p class="leave-details">Booked: 2</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-secondary">PL</div>
                                                <h6 class="leave-title">Personal Leave</h6>
                                                <p class="leave-details">Available: 4</p>
                                                <p class="leave-details">Booked: 1</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-marriage">ML</div>
                                                <h6 class="leave-title">Marriage Leave</h6>
                                                <p class="leave-details">Available: 5</p>
                                                <p class="leave-details">Booked: 1</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-paternity">PL</div>
                                                <h6 class="leave-title">Paternity Leave</h6>
                                                <p class="leave-details">Available: 10</p>
                                                <p class="leave-details">Booked: 2</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="carousel-item">
                                        <div class="col-md-3 m-0">
                                            <div class="card card-body leave-card">
                                                <div class="leave-icon bg-maternity">ML</div>
                                                <h6 class="leave-title">Maternity Leave</h6>
                                                <p class="leave-details">Available: 12</p>
                                                <p class="leave-details">Booked: 4</p>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <a class="carousel-control-prev" href="#recipeCarousel" role="button" data-slide="prev">
                                    <i class="fa-solid fa-chevron-left"></i>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next " href="#recipeCarousel" role="button" data-slide="next">
                                    <i class="fa-solid fa-chevron-right"></i>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <span class="currentempname" style="display: none">@Model.EmpInfo.EmployeeName</span>
    <script>
        if ($('.isempdashboardloaded').text() == "false") {
            let currentMonth;
            let currentYear;

            // Define festivals
            const festivals = {
                '1-1': 'New Year',
                '12-25': 'Christmas',
                '10-2': 'Gandhi Jayanti',
            };

            function updateCalendar() {
                generateCalendar(currentMonth, currentYear);
            }

            function generateCalendar() {
                const today = new Date();
                month = today.getMonth();
                year = today.getFullYear();
                const firstDayOfMonth = new Date(year, month, 1);
                const daysInMonth = new Date(year, month + 1, 0).getDate();
                const startingDay = firstDayOfMonth.getDay() === 0 ? 6 : firstDayOfMonth.getDay() - 1;

                const calendarBody = document.getElementById("calendarBody");
                calendarBody.innerHTML = "";

                document.getElementById("monthYear").innerText = new Date(year, month).toLocaleDateString('default', { month: 'long', year: 'numeric' });

                let date = 1;
                for (let i = 0; i < 6; i++) {
                    const row = document.createElement("tr");

                    for (let j = 0; j < 7; j++) {
                        if (i === 0 && j < startingDay) {
                            const cell = document.createElement("td");
                            row.appendChild(cell);
                        } else if (date > daysInMonth) {
                            break;
                        } else {
                            const cell = document.createElement("td");
                            cell.textContent = date;
                            const festivalKey = `${month + 1}-${date}`;
                            if (date === today.getDate() && year === today.getFullYear() && month === today.getMonth()) {
                                cell.classList.add("highlight-current");
                                const todayTooltip = document.createElement("div");
                                todayTooltip.classList.add("today-tooltip");
                                todayTooltip.textContent = "Today";
                                cell.appendChild(todayTooltip);
                            } else if (festivals[festivalKey]) {
                                cell.dataset.festival = festivals[festivalKey];
                                cell.classList.add("highlight-festival");
                                const festivalTooltip = document.createElement("div");
                                festivalTooltip.classList.add("festival-tooltip");
                                festivalTooltip.textContent = festivals[festivalKey];
                                cell.appendChild(festivalTooltip);
                            }
                            row.appendChild(cell);
                            date++;
                        }
                    }
                    calendarBody.appendChild(row);
                }
            }

            function prevMonth() {
                currentMonth--;
                if (currentMonth < 0) {
                    currentMonth = 11;
                    currentYear--;
                }
                updateCalendar();
            }

            function nextMonth() {
                currentMonth++;
                if (currentMonth > 11) {
                    currentMonth = 0;
                    currentYear++;
                }
                updateCalendar();
            }

            // Initialize current month and year
            const currentDate = new Date();
            currentMonth = currentDate.getMonth();
            currentYear = currentDate.getFullYear();
            generateCalendar(currentMonth, currentYear);

            var lastAction = "checkIn";
            var lastDate = null;

            function toggleCheck() {
                if (lastAction === "checkIn") {
                    // Perform check-in
                    var currentDate = new Date();
                    var hours = currentDate.getHours();
                    var minutes = currentDate.getMinutes().toString().padStart(2, '0');
                    var seconds = currentDate.getSeconds().toString().padStart(2, '0');

                    var ampm = hours >= 12 ? 'PM' : 'AM';
                    hours = hours % 12;
                    hours = hours ? hours : 12; // Handle midnight (0 hours)

                    var currentTime = hours.toString().padStart(2, '0') + ":" + minutes + ":" + seconds;
                    document.getElementById("checkInTime").textContent = currentTime;
                    lastAction = "checkOut";
                    document.querySelector("button").textContent = "Check-Out";
                } else {
                    // Perform check-out
                    var currentDate = new Date();
                    var hours = currentDate.getHours();
                    var minutes = currentDate.getMinutes().toString().padStart(2, '0');
                    var seconds = currentDate.getSeconds().toString().padStart(2, '0');

                    var ampm = hours >= 12 ? 'PM' : 'AM';
                    hours = hours % 12;
                    hours = hours ? hours : 12; // Handle midnight (0 hours)

                    var currentTime = hours.toString().padStart(2, '0') + ":" + minutes + ":" + seconds;
                    document.getElementById("checkOutTime").textContent = currentTime;
                    lastAction = "checkIn";
                    document.querySelector("button").textContent = "Check-In";
                }
            }

            function updateRunningTime() {
                var currentDate = new Date();
                var hours = currentDate.getHours();
                var minutes = currentDate.getMinutes().toString().padStart(2, '0');
                var seconds = currentDate.getSeconds().toString().padStart(2, '0');

                var ampm = hours >= 12 ? 'PM' : 'AM';
                hours = hours % 12;
                hours = hours ? hours : 12;

                var currentTime = hours.toString().padStart(2, '0') + ":" + minutes + ":" + seconds + " " + ampm;

                document.getElementById("currentDate").textContent = currentDate.toLocaleDateString('en-IN', { timeZone: 'Asia/Kolkata', year: 'numeric', month: 'long', day: 'numeric' });
                document.getElementById("currentTime").textContent = currentTime;
                document.getElementById("day").textContent = currentDate.toLocaleDateString('en-IN', { timeZone: 'Asia/Kolkata', weekday: 'long' }).toUpperCase() + ",";
            }

            updateRunningTime();
            setInterval(updateRunningTime, 1000);

            let currentIndex = 0;
            const itemsToShow = 4;
            const totalItems = $('.leave-card').length;
            const itemWidth = $('.leave-card').outerWidth(true);

            function updateCarousel() {
                const offset = -currentIndex * itemWidth;
                $('.leave-row').css('transform', `translateX(${offset}px)`);
            }

            $('.carousel-control-next').click(function () {
                if (currentIndex < totalItems - itemsToShow) {
                    currentIndex++;
                    updateCarousel();
                }
            });

            $('.carousel-control-prev').click(function () {
                if (currentIndex > 0) {
                    currentIndex--;
                    updateCarousel();
                }
            });

            updateCarousel();

            $('.isempdashboardloaded').text('true');
        }

        //On link click generating the calender again
        generateCalendar();

        $(document).ready(function () {
            $('#recipeCarousel').carousel({
                interval: 10000
            });


            $('.carousel .carousel-item').each(function () {
                var minPerSlide = 4;
                var next = $(this).next();

                if (!next.length) {
                    next = $(this).siblings(':first');
                }

                for (var i = 0; i < minPerSlide; i++) {
                    if (!next.length) {
                        next = $(this).siblings(':first');
                    }

                    next.children(':first-child').clone().appendTo($(this));
                    next = next.next();
                }
            });
            $('#recipeCarousel').on('slide.bs.carousel', function () {
                $(this).find('.carousel-inner').css('transition', 'transform 0.5s ease-in-out');
            });

            // Reset transition after the slide event completes
            $('#recipeCarousel').on('slid.bs.carousel', function () {
                $(this).find('.carousel-inner').css('transition', '');
            });
        });

        function parseCustomDate(dateString) {
            // Split date and time
            var parts = dateString.split(' ');
            var datePart = parts[0].split('-');
            var timePart = parts[1].split(':');

            // Extract date and time components
            var day = parseInt(datePart[0], 10);
            var month = parseInt(datePart[1], 10) - 1; // Months are zero-based in JavaScript
            var year = parseInt(datePart[2], 10);
            var hours = parseInt(timePart[0], 10);
            var minutes = parseInt(timePart[1], 10);
            var seconds = parseInt(timePart[2], 10);

            // Create and return new Date object
            return new Date(year, month, day, hours, minutes, seconds);
        }
        
        function updateTimer1() {
            var signedInDateTimeStr = $('#checkinhoursminutes').attr('data-signedindatetime');
            var signedInDateTime = parseCustomDate(signedInDateTimeStr);

            if (signedInDateTime.toString() !== 'Invalid Date' && signedInDateTimeStr !== '01-01-0001 00:00:00') {
                var currentTime = new Date();

                var timeDifference = currentTime - signedInDateTime;
                var totalSeconds = Math.floor(timeDifference / 1000);
                var hours = Math.floor(totalSeconds / 3600);
                var minutes = Math.floor((totalSeconds % 3600) / 60);
                var seconds = totalSeconds % 60;

                var formattedHours = hours < 10 ? "0" + hours : hours.toString();
                var formattedMinutes = minutes < 10 ? "0" + minutes : minutes.toString();
                var formattedSeconds = seconds < 10 ? "0" + seconds : seconds.toString();

                var formattedTime = formattedHours + ":" + formattedMinutes + ":" + formattedSeconds;

                $('#checkinhoursminutes').text(formattedTime);
            }
        }

        setInterval(updateTimer1, 1000);
        updateTimer1();

    </script>
</div>

