@model HRMS.Models.Employee.EmpAttedenceModel

<div class="empattendence-container">

    <style>
        .attendence-title {
            display: inline-block;
            vertical-align: middle;
          /* Align vertically with the slider */
        }

        .left-right-icon {
            display: inline-block;
            vertical-align: middle; /* Align vertically with the label */
            font-size: 15px;
        }

        .left-btn,
        .right-btn {
            cursor: pointer;
        }

       

        #attendanceTable_length {
            display: none;
        }

        #attendanceTable_filter {
            display: none;
        }
        .empatt-body {
            font-size: 13px;
            font-weight: 300;
            
        }
        .attendance-find {
            background-color: #007bff;
        }
        .att-table{
            margin-top:15px;
        }

    </style>

    @{

        // Format the dates
        string startDateFormatted = Model.startWeek.ToString("dd MMMM yyyy");
        string endDateFormatted = Model.EndWeek.ToString("dd MMMM yyyy");

    }
    <div class="attendance-nav">

        <div class="att-div">
            <div>
                <h4 class="attendence-title ml-1">Attendance</h4>
                <div id="week-slider" class="left-right-icon">
                    <i class="bi bi-chevron-left left-btn"></i>
                    <span id="week-start">@startDateFormatted</span> - <span id="week-end">@endDateFormatted</span>
                    <i class="bi bi-chevron-right right-btn"></i>
                </div>
            </div>

            <div class="att-calender" >
                <div class="form-row from-to-calen">
                    <div class="col d-flex" style="align-items: center; font-size:14px;">
                        From <input type="date" class="form-control ml-2" id="attendancefrom" name="attendancefrom" style="font-size:13px;">
                    </div>
                    <div class="col d-flex" style="align-items: center; font-size: 14px;">
                        To <input type="date" class="form-control ml-2" id="attendanceto" name="attendanceto" style="font-size:13px;">
                    </div>
                </div>
                <div class="apply-div">
                    <button class="btn apply-filter attendance-find ml-3">Apply</button>
                </div>
            </div>
        </div>
        <div class="att-table">

            <table id="attendanceTable" class="table table-attendence">
                <thead class="attendence-thead">
                    <tr>
                        <th scope="col">Date</th>
                        <th scope="col" style="text-align: center;">Checkin-Check-Out</th>
                        <th scope="col">Hours</th>
                        <th scope="col">Status</th>
                    </tr>
                </thead>
                <tbody class="empatt-body">
                    @foreach (DateTime date in Model.AllDates)
                    {
                        var isWeekendDate = date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday;
                        var weekendtext = "";
                        if (isWeekendDate)
                        {
                            weekendtext = "weekend";
                        }

                        var isCheckInExists = Model.AttedenceList.Where(x => x.Login_date == date).FirstOrDefault();
                        if (isCheckInExists != null)
                        {
                            string starttimeWithAmPm = isCheckInExists.Signin_Time.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);
                            string endtimeWithAmPm = isCheckInExists.Signout_Time?.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);

                            string statusType = "bar-width-green";
                            string buttonColor = "present-btn";
                            string attedenceType = "Present";
                            int hours = 00;
                            int minutes = 00;

                            if (endtimeWithAmPm != null)
                            {
                                // Initialize endTime as null
                                DateTime? endTime = null;
                                endTime = isCheckInExists.Signout_Time;


                                // Calculate time difference
                                TimeSpan? timeDifference = endTime - isCheckInExists.Signin_Time;

                                // Convert time difference to hours and minutes
                                hours = (int)timeDifference?.TotalHours;
                                minutes = (int)timeDifference?.Minutes;

                                if (hours < 9)
                                {
                                    statusType = "bar-width-yellow";
                                    buttonColor = "yellow-btn";
                                    attedenceType = "Permission";
                                }
                            }
                            else
                            {
                                if (isCheckInExists.Login_date == DateTime.Today)
                                {
                                    // Calculate time difference
                                    TimeSpan? timeDifference = DateTime.Now - isCheckInExists.Signin_Time;

                                    // Convert time difference to hours and minutes
                                    hours = (int)timeDifference?.TotalHours;
                                    minutes = (int)timeDifference?.Minutes;
                                }
                            }

                            <tr>
                                <th scope="row">@isCheckInExists.Login_date.ToString("dd MMMM yyyy") <br><span class="fntblur">@isCheckInExists.Login_date.ToString("ddd", System.Globalization.CultureInfo.InvariantCulture)</span></th>

                                <td class="bar-wi bar-wd">
                                    <div class="progress attendance-bar bar">
                                        <div class="progress-bar @statusType" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="10"></div>
                                        <span class="bar-time">@starttimeWithAmPm - @endtimeWithAmPm</span>
                                    </div>
                                </td>
                                <td class="bar-wd">@hours.ToString("00").Trim()h:@minutes.ToString("00").Trim()m</td>
                                <td><button class="@buttonColor">@attedenceType</button></td>
                            </tr>
                        }
                        else
                        {
                            string statusType = "bar-width-gray";
                            string buttonColor = "gray-btn";
                            string attedenceType = "Weekend";
                            if (!isWeekendDate)
                            {
                                statusType = "bar-width-blue";
                                buttonColor = "leave-btn";
                                attedenceType = "Absent";
                            }

                            <tr>
                                <th scope="row">@date.ToString("dd MMMM yyyy") <br><span class="fntblur">@date.ToString("ddd", System.Globalization.CultureInfo.InvariantCulture)</span></th>
                                <td class="bar-wi bar-wd">
                                    <div class="progress attendance-bar bar">
                                        <div class="progress-bar @statusType" role="progressbar" aria-valuenow="75" aria-valuemin="10" aria-valuemax="10"></div>
                                        <span class="bar-time">@attedenceType</span>
                                    </div>
                                </td>

                                <td class="bar-wd">00h:00m</td>
                                <td><button class="@buttonColor">@attedenceType</button></td>

                            </tr>
                        }
                    }
                </tbody>
            </table>

        </div>

        @*<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>*@
    </div>

    <script>
        $(document).ready(function () {

            if (!$.fn.DataTable.isDataTable('#attendanceTable')) {
                $('#attendanceTable').DataTable({
                    "paging": true,
                    "searching": true,
                    "ordering": false,
                    "info": true,
                    "autoWidth": false,
                    "lengthMenu": [[7, 14, 21, -1], [7, 14, 21, "All"]],
                    "columnDefs": [
                        { "orderable": false, "targets": 1 }, // Disable ordering on the Checkin-Check-Out column
                        { "orderable": false, "targets": 3 }  // Disable ordering on the Status column
                    ]
                });
            }

        });

    </script>
</div>

