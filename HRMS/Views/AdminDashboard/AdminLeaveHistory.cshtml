@model HRMS.Models.Admin.AdminLeaveHistoryViewModel


<div class="admin-leaveHistory-view">

    <style>

        .userIcon {
            width: 42px;
            height: 42px;
            object-fit: cover;
            border-radius: 50%;
            margin-right: 10px;
        }

        #adminleaveHistoryTable_filter {
            display: none;
        }

        #adminleaveHistoryTable_length {
            display: none;
        }

        .adminleavehistory-dropdown-toggle::after {
            display: none;
        }

        .adminleavehistory-dropdown-toggle {
            width: 250px;
            border: 1px solid black;
            padding: 0.375rem 0.75rem;
            border-radius: 0.25rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: transparent;
            color: #007bff;
        }

            .adminleavehistory-dropdown-toggle:hover, .adminleavehistory-dropdown-toggle:focus {
                background-color: transparent;
                color: #0056b3;
                box-shadow: none;
            }
    </style>
    <div class="container-fluid res-admin-leave-history">
        <div class="row mb-2 align-items-center">
            <div class="col-lg-3 col-md-6">
                <h3 class="ml-1">Leave History</h3>
            </div>
            @*multiselect search dropdown*@
            <div class="col-lg-9 d-flex justify-content-end res-admin-leavehistory-main-header">
                <div class="dropdown col-lg-4 col-sm-12 col-md-6 res-admin-leavehistory-searchbar">
                    <a class="btn btn-outline-primary adminleavehistory-dropdown-toggle" href="#" id="employeeDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Select Employees <i class="fas fa-chevron-down ml-1"></i>
                    </a>
                    <div class="dropdown-menu adminleavehistory-dropdown-menu dropdown-menu-wide p-3" aria-labelledby="employeeDropdown">
                        <input type="text" class="form-control mb-2" id="employeeSearch" placeholder="Search">
                        <div id="employeeList">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="selectAll">
                                <label class="adminleavehistory-form-check-label" for="selectAll">
                                    <span>Select All</span>
                                </label>
                            </div>

                            @foreach (var emp in Model.Employees)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="@emp.EmployeeID">
                                    <label class="adminleavehistory-form-check-label" for="@emp.EmployeeID">
                                        <span>@emp.EmployeeName @emp.EmployeeID</span>
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <!-- Advanced Filters -->
                <div class="col-lg-3 navbarl col-sm-7 col-md-5 res-admin-leavehistory-block-header res-admin-leavehistory-filter">
                    <div class="advanced-leavehistory-filtertab d-flex justify-content-between1 align-items-center">
                        <p class="advancetitle mb-0">Advanced Filters</p>
                        <div class="toggle-button advanceleave-history-button ml-2">
                            <button class="collapsedropdown collapsed btn" type="button" data-toggle="collapse" data-target="#adminleavehistoryfilter" aria-expanded="false" aria-controls="demo">
                                <i class="fa-solid fa-angle-down"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <!-- Add leave history dropdown -->
                <div class="col-lg-1 navbarl col-sm-4 col-md-2 res-admin-leavehistory-block-header res-admin-total-leaves-import">
                    <div class="form-group " style="">
                        <button type="button" class="btn btn-primary btn-import-leaves-hstory">Import</button>
                    </div>
                </div>

                <div class="col-lg-1 navbarl col-sm-3 col-md-3 res-admin-leavehistory-block-header res-admin-leave-balance-export">
                    <div class="form-group adminleave-history" style="">
                        <button type="button" class="btn btn-primary" id="exportLeaveHistory" onclick="exportLeaveHistory()">Export</button>
                    </div>
                </div>
                <div class="col-lg-2 col-sm-6 col-md-4 dropdown res-admin-leave-balance-settings-dropdown">
                    <button class="btn dropdown-toggle" type="button" id="adminleaveSettingsDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="">
                        Leave Settings
                    </button>
                    <div class="dropdown-menu leaveSettings-dropdown" aria-labelledby="leaveSettingsDropdown" style="border:1px solid gray">
                        <a class="dropdown-item adminleave-history">Leave History</a>
                        <a class="dropdown-item adminleave-Balanve-link">Leave Balance</a>
                        <a class="dropdown-item adminleave-CompOff-link">CompOff Request</a>
                        <a class="dropdown-item adminside-leaveapply">Apply Leave</a>

                    </div>
                </div>

                <div class="col-lg-1 navbarl col-sm-12 col-md-12 res-admin-leavehistory-block-header res-admin-leave-balance-calender">
                    <i class="fa fa-calendar AdminIndiEmpLeave-History" aria-hidden="true"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-end ml-2 col-md-12 res-admin-leavehistory-filter-show">
        <div class="col-lg-11 col-sm-12 col-md-12">
            <div id="adminleavehistoryfilter" class="collapse advanceleavehistoryfilter">
                <div class="collapse-topic align-items-center justify-content-end res-admin-history-filter-inside" style="margin-right: 24px;">
                    <span class="mr-3 res-admin-filter">
                        Filter By<span class="res-close-btn" style="display:none;">X</span>
                    </span>

                    <div class="form-group res-adminadvfilter-leavehistory d-flex">
                        <label for="from" class="mr-2">From</label>
                        <input type="date" class="form-control form-control-sm mr-2" id="leavehistory-fromDate" style="width: 120px;">
                    </div>
                    <div class="form-group res-adminadvfilter-leavehistory d-flex">
                        <label for="to" class="mr-2">To</label>
                        <input type="date" class="form-control form-control-sm mr-2" id="leavehistory-toDate" style="width: 120px;">
                    </div>

                    <div class="dropdown res-adminadvfilter-leavehistory mr-3" style="border-radius: 10px;">
                        <select class="form-control form-select-sm" name="department" id="leavehistory-department-dropdown" style="border-radius: 15px; height: 35px; width: 131px;">
                            <option value="" disabled selected>Department</option>
                            @foreach (var item in Model.Departments)
                            {
                                <option value="@item.Id">@item.Id</option>
                            }
                            <option value="All">All</option>
                        </select>
                    </div>
                    <div class="dropdown res-adminadvfilter-leavehistory mr-3">
                        <select class="form-control form-select-sm" name="Location" id="leavehistory-Location-dropdown" style="border-radius: 15px; height: 35px; width: 131px;">
                            <option value="" disabled selected>Location</option>
                            <option value="Madurai">Madurai</option>
                            <option value="Hyderabad">Hyderabad</option>
                            <option value="All">All</option>
                        </select>
                    </div>
                    <div class="dropdown res-adminadvfilter-leavehistory">
                        <select class="form-control form-select-sm" name="status" id="leavehistory-status-dropdown" style="border-radius: 15px; height: 35px; width: 131px;border: 1px solid lightgray">
                            <option value="" disabled selected>Status</option>
                            <option value="Approved">Approved</option>
                            <option value="Rejected">Rejected</option>
                            <option value="Pending">Pending</option>
                            <option value="Cancelled">Cancelled</option>
                            <option value="All">All</option>
                        </select>
                    </div>
                    <div class="form-group align-items-center res-adminadvfilter-leavehistory mr-2">
                        <button type="button" class="btn btn-sm btn-primary leave-view-history">View</button>
                        <button type="button" class="btn btn-sm btn-primary leave-export-history">Export</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="res-admin-leave-history-table table-responsive">
        <table class="table table-admin-leave-history" id="adminleaveHistoryTable" style="font-size:14px;">
            <thead style="background-color: #EEF4FF; border-radius: 10px;">
                <tr>
                    <th><input type="checkbox" id="selectAllrows"></th>
                    <th>Emp-ID</th>
                    <th>Name</th>
                    <th>Leave Type</th>
                    <th>Applied Date</th>
                    <th>From Date</th>
                    <th>To Date</th>
                    <th>Days/Hours</th>
                    <th>Location</th>
                    <th style="width: 100px;">Reason</th>
                    <th style="display: none">Status</th>
                    <th style="display: none">Submitted By</th>
                    <th style="display: none">Submitted Date</th>
                    <th style="display: none">Updated By</th>
                    <th style="display: none">Updated Date</th>
                    <th>
                        <div class="dropdown dropdown-columns">
                            <span class="menu-icon dropdown-th" id="dropdownMenu"><i class="fa-solid fa-list"></i></span>
                            <div class="action-menu" id="dropdownMenuContent" style="display: none; background-color:white; border-radius:5px;">
                                <a href="#" class="empid"><input type="checkbox"> Emp ID</a>
                                <a href="#" class="name"><input type="checkbox"> Name</a>
                                <a href="#" class="LeaveType"><input type="checkbox"> Leave Type</a>
                                <a href="#" class="FromDate"><input type="checkbox"> From Date</a>
                                <a href="#" class="ToDate"><input type="checkbox"> To Date</a>
                                <a href="#" class="DaysHours"><input type="checkbox"> Days/Hours</a>
                                <a href="#" class="Location"><input type="checkbox"> Location</a>
                                <a href="#" class="Reason"><input type="checkbox"> Reason</a>
                            </div>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>

                @foreach (var leaveInfo in Model.AllEMployeeLeaves)
                {
                    <tr>
                        <td> <input type="checkbox"></td>
                        <td>@leaveInfo.LatestLeave.employee_id</td>
                        @{
                            var empImagePath = "/Assets/EmpImages/" + leaveInfo.LatestLeave.employee_id + ".jpeg";
                        }
                        <td><div style="display: flex; align-items: center;"><img class="userIcon" src="@empImagePath"><span style="margin-top: 0px; margin-right: 10px;">@leaveInfo.LatestLeave.employee_name<br><span style="color: #3E78CF;">@leaveInfo.LatestLeave.OfficalEmailid</span></span></div></td>
                        <td>@leaveInfo.LatestLeave.leavesource</td>
                        <td class="res-admin-leave-applieddate">
                            <div class="res-leave-his-date">
                                @(leaveInfo.LatestLeave.createddate.HasValue
            ? leaveInfo.LatestLeave.createddate.Value.ToString("dd MMMM yyyy")
            : "No Date Available")

                            </div><div class="res-leave-his-day mutedText">
                                @(leaveInfo.LatestLeave.createddate.HasValue
            ? leaveInfo.LatestLeave.createddate.Value.ToString("ddd")
            : "No Date Available")
                            </div>
                        </td>
                        <td class="res-admin-leave-from">
                            <div class="res-leave-his-date">
                                @(leaveInfo.LatestLeave.Fromdate.HasValue
            ? leaveInfo.LatestLeave.Fromdate.Value.ToString("dd MMMM yyyy")
            : "No Date Available")

                            </div><div class="res-leave-his-day mutedText">
                                @(leaveInfo.LatestLeave.Fromdate.HasValue
            ? leaveInfo.LatestLeave.Fromdate.Value.ToString("ddd")
            : "No Date Available")
                            </div>
                        </td>
                        <td class="res-admin-leave-to">
                            <div class="res-leave-his-date">
                                @(leaveInfo.LatestLeave.Todate.HasValue
            ? leaveInfo.LatestLeave.Todate.Value.ToString("dd MMMM yyyy")
            : "No Date Available")
                            </div><div class="res-leave-his-day mutedText">
                                @(leaveInfo.LatestLeave.Todate.HasValue
            ? leaveInfo.LatestLeave.Todate.Value.ToString("ddd")
            : "No Date Available")
                            </div>
                        </td>
                        <td>@leaveInfo.TotalLeaveDays</td>
                        <td>@leaveInfo.LatestLeave.Location</td>
                        <td>@leaveInfo.LatestLeave.leave_reason</td>
                        <td style="display: none">@leaveInfo.LatestLeave.LeaveStatus</td>
                        <td style="display: none">@leaveInfo.LatestLeave.createdby</td>
                        <td style="display: none">@(leaveInfo.LatestLeave.createddate.HasValue? leaveInfo.LatestLeave.createddate.Value.ToString("dd MMMM yyyy"): "No Date Available")</td>
                        <td style="display: none">@leaveInfo.LatestLeave.updatedby</td>
                        <td style="display: none">@(leaveInfo.LatestLeave.updateddate.HasValue? leaveInfo.LatestLeave.updateddate.Value.ToString("dd MMMM yyyy"): "No Date Available")</td>
                        <td></td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>


    <script>
        $(document).ready(function () {
            // Initialize DataTable if not already initialized
            if (!$.fn.DataTable.isDataTable('#adminleaveHistoryTable')) {
                var table = $('#adminleaveHistoryTable').DataTable({
                    "responsive": true,
                    "paging": true,
                    "searching": true,
                    "ordering": false,
                    "info": true,
                    "autoWidth": false,
                    "lengthMenu": [[7, 14, 21, -1], [7, 14, 21, "All"]]
                });
            }

            // Handle the "Select All" checkbox functionality
            $(document).on('change', '#selectAllrows', function () {
                var checked = $(this).is(':checked');
                $('#adminleaveHistoryTable tbody input[type="checkbox"]').prop('checked', checked);
            });

            // Dropdown menu toggle
            $('#dropdownMenuContent input[type="checkbox"]').change(function () {
                var columnIdx = $(this).closest('a').index() + 1;
                var isChecked = $(this).prop('checked');
                table.column(columnIdx).visible(isChecked);
            });

            $('#dropdownMenuContent input[type="checkbox"]').prop('checked', true);

            $(document).on('click', '#dropdownMenu', function () {
                $('#dropdownMenuContent').toggle();
            });

            $(document).on('click', function (event) {
                if (!$(event.target).closest('.dropdown-columns').length && !$(event.target).is('#dropdownMenu')) {
                    $('#dropdownMenuContent').hide();
                }
            });

            // Employee search filter
            $(document).on('keyup', '#employeeSearch', function () {
                var value = $(this).val().toLowerCase();
                $('#employeeList .form-check').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // Select All functionality in employee list
            $(document).on('change', '#selectAll', function () {
                var checked = $(this).is(':checked');
                $('#employeeList .form-check-input').not('#selectAll').prop('checked', checked);
                filterTable(table);
            });

            // Function to update selected employees in button text
            function updateSelectedEmployees() {
                let selectedEmployees = [];
                $('#employeeList .form-check-input:checked').each(function () {
                    let employeeName = $(this).siblings('label').find('span').text();
                    selectedEmployees.push(employeeName);
                });

                // Update button text with selected employees
                let buttonText = 'Select Employees';
                if (selectedEmployees.length > 0) {
                    if (selectedEmployees.length === 1) {
                        buttonText = selectedEmployees[0];
                    } else {
                        buttonText = selectedEmployees.length + ' employees selected';
                    }
                }
                $('#employeeDropdown').html(buttonText + ' <i class="fas fa-chevron-down ml-1"></i>');
            }

            // Event handler for checkbox change
            $('#employeeList .form-check-input').change(function () {
                updateSelectedEmployees();
                filterTable(table); // Assuming filterTable is your function to filter DataTable
            });


            function filterTable(table) {
                var selectedEmployees = [];
                $('#employeeList .form-check-input:checked').not('#selectAll').each(function () {
                    selectedEmployees.push($(this).attr('id'));
                });

                if (selectedEmployees.length > 0) {
                    table.columns(1).search(selectedEmployees.join('|'), true, false).draw();
                } else {
                    table.columns(1).search('').draw();
                }
            }



            $(document).off('click', '#exportLeaveHistory').on('click', '#exportLeaveHistory', function (event) {
                event.preventDefault();

                // Get the table element
                var table = document.getElementById("adminleaveHistoryTable");

                // Extract table headers, skipping the checkbox column
                var headers = [];
                for (var i = 1; i < table.rows[0].cells.length; i++) {
                    headers.push(table.rows[0].cells[i].innerText);
                }

                // Insert new headers for Name and Email if not already present
                if (!headers.includes("Name")) headers.splice(1, 0, "Name");
                if (!headers.includes("Email")) headers.splice(2, 0, "Email");

                // Extract table data for selected rows only
                var data = [];
                for (var i = 1; i < table.rows.length; i++) {
                    var checkbox = table.rows[i].cells[0].querySelector('input[type="checkbox"]');
                    if (checkbox && checkbox.checked) {
                        var row = [];
                        for (var j = 1; j < table.rows[i].cells.length; j++) {
                            if (j === 2) {
                                // Extract name and email separately from the third cell
                                var nameEmailCell = table.rows[i].cells[j];
                                var name = nameEmailCell.querySelector("span").childNodes[0].textContent.trim();
                                var email = nameEmailCell.querySelector("span").childNodes[2].textContent.trim();
                                row.push(name);
                                row.push(email);
                            } else {
                                row.push(table.rows[i].cells[j].innerText);
                            }
                        }
                        data.push(row);
                    }
                }

                // Combine headers and data
                data.unshift(headers);

                // Create a new workbook and add the table data
                var wb = XLSX.utils.book_new();
                var ws = XLSX.utils.aoa_to_sheet(data);

                // Set alignment to left for all cells
                for (var R = 0; R < data.length; ++R) {
                    for (var C = 0; C < data[R].length; ++C) {
                        var cell_address = XLSX.utils.encode_cell({ r: R, c: C });
                        if (!ws[cell_address]) ws[cell_address] = {};
                        ws[cell_address].s = {
                            alignment: { horizontal: "left" }
                        };
                    }
                }

                // Adjust column width to start from the beginning
                var colWidths = data[0].map(() => ({ wch: 20 }));
                ws['!cols'] = colWidths;

                // Append worksheet to workbook
                XLSX.utils.book_append_sheet(wb, ws, "Leave History");

                // Export the workbook to Excel file
                XLSX.writeFile(wb, "LeaveHistory.xlsx");
            });



        });
    </script>

</div>


