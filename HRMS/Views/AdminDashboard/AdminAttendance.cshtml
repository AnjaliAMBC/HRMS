@model HRMS.Models.Admin.AdminAttendanceModel

@Html.Partial("_NavBar")
<div class="container-fluid res-admin-attendance">
    <div class="hiddenadmindashboard" style="display: none"></div>
    @Html.Partial("_adminsidemenu")
    <div class="main-content container-fluid" style="width: 84%">
        <div class="content admin-attendance-container" style="margin-left: -15px; margin-top: 5px;">
            <div class="admin-attendancemgmt-view">
                <div style="margin-left: 0%">
                    <style>
                        .employee-image {
                            width: 40px;
                            height: 40px;
                            border-radius: 50%;
                        }

                        .initials-circle {
                            width: 35px;
                            height: 35px;
                            border-radius: 50%;
                            background-color: #C4C4C4;
                            color: black;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            font-weight: normal;
                            margin-right: 5px;
                            //margin-left: 10px;
                        }

                        .employee-info {
                            display: flex;
                            align-items: center;
                        }

                        .employee-details {
                            margin-left: 10px;
                        }

                        .employee-id {
                            margin-right: 10px;
                        }

                        #adminaddendancetable_filter {
                            display: none;
                        }

                        #adminaddendancetable_length {
                            display: none;
                        }

                        .weekend {
                            color: #0089bb; /* Example color for weekend dates */
                        }

                        .day.active {
                            border: 2px solid #9FE2FA;
                            color: grey;
                            font-weight: 500;
                            border-radius: 5px;
                            padding: 0px 24px 28px 5px;
                            padding-left: -1px !important;
                            background-color: aliceblue;
                        }

                        /* Updated styles for the day divs without borders */
                        .day {
                            display: inline-block;
                            width: 29px;
                            height: 29px;
                            text-align: center;
                            line-height: 29px;
                            margin: 2px;
                            cursor: pointer;
                            font-size: 14px;
                        }

                            .day:hover {
                                background-color: #f0f0f0;
                            }
                            .day.weekend {
                                color: #8d8d8d; /* Example color for weekend dates */
                            }
                        table.dataTable.display tbody td,
                        table.dataTable thead th {
                            border: none;
                        }

                        .leaveupdate_view {
                            width: 25%;
                            border: 1px solid transparent;
                            background-color: white;
                            border-radius: 10px;
                            position: fixed;
                            top: 50%;
                            left: 50%;
                            transform: translate(-50%, -50%);
                            z-index: 9999;
                        }

                            .leaveupdate_view input,
                            .leaveupdate_view select {
                                border: 1px solid #BFBFBF;
                                height: 30px;
                            }

                                .leaveupdate_view input[readonly],
                                .leaveupdate_view select[readonly] {
                                    background-color: #f0f0f0;
                                }

                                .leaveupdate_view input::placeholder {
                                    color: #929292;
                                    font-size: 14px;
                                }

                                .leaveupdate_view input[type="date" i]::placeholder {
                                    color: #929292;
                                }

                            .leaveupdate_view label {
                                font-size: 13px;
                                font-weight: 600;
                                margin-bottom: 0px;
                            }

                        .leaveupdate_body {
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            height: 100vh;
                            margin: 0;
                            background-color: #94949466;
                        }

                        .clearattendence-filter {
                            cursor: pointer;
                            color: #007bff;
                            text-decoration: underline;
                            margin-left: 10px; /* Add margin to create space between buttons */
                        }

                        #attedencemonth {
                            width: 75%;
                            border-radius: 5px;
                            margin-left: 20px;
                            background-color: aliceblue;
                        }

                        #status-dropdown {
                            width: 85px;
                        }

                        #location-dropdown {
                            width: 95px;
                        }

                        .is-invalid {
                            border-color: #dc3545;
                        }

                        .invalid-feedback {
                            color: #dc3545;
                            display: block;
                            margin-top: 0.25rem;
                            font-size: 0.875em;
                        }
                        .attendance-submit-admin {
                            background-color: #3E78CF;
                        }
                    </style>

                    <div class="row mb-2 align-items-center">
                        <div class="col-4 col-sm-12 col-lg-3 col-md-4">
                            <h4 style="margin-left: 20px; margin-top: 10px;">Attendance</h4>
                        </div>

                        <div class="d-flex1 justify-content-end col-sm-12 col-md-8 col-lg-4 res-admin-att-header-block">
                            <div class="search-container mr-2">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" style="background-color: transparent; border-right: none; border-radius: 5px 0 0 5px; height: 35px;"><i class="fas fa-search" style="color: #369479;"></i></span>
                                    </div>
                                    <input type="text" id="adminAttedencetableSearch" placeholder="Search By Keyword" class="advancesearch form-control" aria-label="Search By Keyword" style="border-radius: 0 5px 5px 0; height: 35px; font-size: 14px;">
                                </div>
                            </div>
                        </div>

                        <div class="col-8 d-flex justify-content-end col-sm-12 col-md-12 col-lg-5 res-admin-att-header-block">
                            <div class="dropdowns-container d-flex  align-items-center att_navbar res-admin-attendance-header">

                                <div class="form-group mr-2 status-drop adminatt-dropdown" style="margin-top: 10px;">
                                    <select class="form-control form-select-sm p-0" name="status" id="status-dropdown">
                                        <option value="" disabled selected>Status</option>
                                        <option value="Present">Present</option>
                                        <option value="Leave">Leave</option>
                                        <option value="Permission">Permission</option>
                                        <option value="All">All</option>
                                    </select>
                                </div>



                                <div class="form-group mr-2 adminatt-dropdown" style="margin-top: 10px;">
                                    <select class="form-control form-select-sm p-0 ml-2" name="status" id="location-dropdown">
                                        <option value="" disabled selected>Location</option>
                                        <option value="Hyderabad">Hyderabad</option>
                                        <option value="Madurai">Madurai</option>
                                        <option value="All">All</option>
                                    </select>
                                </div>


                                <!-- Dropdown for Export options -->
                                <div class="form-group adminatt-dropdown mt-3 d-flex1" style="margin-top: 17px;">
                                    <label class="export-label mr-0 ml-2" for="exportLabel">Export</label>
                                    <i class="fas fa-chevron-down mt-2 ml-1" id="exportIcon" style="cursor: pointer; font-size:12px;" data-toggle="collapse" data-target="#dateDropdown"></i>
                                </div>



                                <div class="mb-2 res-add-shift-btn">
                                    <button type="button" class="btn btn-primary btn-addshift ">Add Shift</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="collapse" id="dateDropdown">
                        <div class="row  align-items-center">
                            <div class="col-4"></div> <!-- Empty column -->
                            <div class="col-12 d-flex justify-content-end pr-5 res-date-from-to">
                                <div class="form-group d-flex mr-2 b-from">
                                    <label for="from" class="mt-1 mb-0">From</label>
                                    <input type="date" class="form-control form-control-sm" id="fromDate" style="width: 120px;">
                                </div>
                                <div class="form-group d-flex mr-2 b-to">
                                    <label for="to" class="mt-1 mb-0">To</label>
                                    <input type="date" class="form-control form-control-sm" id="toDate" style="width: 120px;">
                                </div>
                                <div class="form-group d-flex align-items-center b-submit">
                                    <button type="button" class="btn btn-sm attendance-submit-admin" onclick="submitDateRange()">Submit</button>
                                    <a href="#" class="clearattendence-filter">Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="row mb-3">
                        <div class="col">
                            <div class="dropdowns-container">
                                <div class="dropdown month-dropdown">
                                    <input type="month" id="attedencemonth" value="" class="form-control">
                                </div>
                                <div class="days-container" id="daysContainer">
                                    <!-- Dates will be added dynamically here -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="res-admin-attendance-main table-container table-responsive" style="border-radius: 10px; overflow: hidden;">
                        <table id="adminaddendancetable" class="display" style="width: 100%;">
                            <thead class="adminatt_thead">
                                <tr>
                                    <th style="width:50px">Emp ID</th>
                                    <th style="">Employee Name</th>
                                    <th>Location</th>
                                    <th>Date</th>
                                    <th>Check in</th>
                                    <th>Check out</th>
                                    <th>Hours</th>
                                    <th>Status</th>
                                    <th class="hoverable-row"></th>
                                </tr>
                            </thead>
                            <tbody class="adminatt_tbody">

                                @foreach (emp_info employee in Model.AllEmployees)
                                {
                                    var empCheckin = Model.EmpCheckInList.Where(x => x.EmployeeID == employee.EmployeeID).FirstOrDefault();
                                    var empLeave = Model.Leaves.Where(x => x.employee_id == employee.EmployeeID && (x.LeaveStatus != "Rejected" && x.LeaveStatus != "Canceled")).FirstOrDefault();

                                    var imagePath = "";
                                    string initials = string.Empty;
                                    if (!string.IsNullOrEmpty(employee.imagepath))
                                    {
                                        imagePath = "/assets/empImages/" + employee.imagepath + "?" + System.DateTime.Now;
                                    }
                                    else
                                    {
                                        var words = employee.EmployeeName.Split(' ');
                                        if (words.Length >= 2)
                                        {
                                            initials = $"{words[0][0]}{words[1][0]}";
                                        }
                                        else if (words.Length == 1)
                                        {
                                            initials = $"{words[0][0]}";
                                        }
                                    }


                                    if (empCheckin != null)
                                    {
                                        <tr>
                                            <td><span class="employee-id">@empCheckin.EmployeeID</span></td>
                                            <td class="employee-info p-2">
                                                @if (!string.IsNullOrEmpty(employee.imagepath))
                                                {
                                                    <img src="@imagePath" alt="@empCheckin.EmployeeID" class="attemployee-image mr-2 ml-2">
                                                }
                                                else
                                                {
                                                    <div class="initials-circle mr-2 ml-2">@initials</div>
                                                }

                                                <div class="employee-details mt-2 ml-2">
                                                    @empCheckin.EmployeeName<br>
                                                    <small>@empCheckin.OfficalEmailid</small>
                                                </div>

                                                <span class="emp-logindate" style="display: none">@empCheckin.Login_date.ToString("dd MMMM yyyy")</span>
                                            </td>
                                            <td>@empCheckin.Location</td>
                                            <td>@empCheckin.Login_date.ToString("dd MMMM yyyy")</td>

                                            @{
                                                string starttimeWithAmPm = empCheckin.Signin_Time.ToString("hh:mm:ss tt", System.Globalization.CultureInfo.InvariantCulture);
                                                string endtimeWithAmPm = empCheckin.Signout_Time?.ToString("hh:mm:ss tt", System.Globalization.CultureInfo.InvariantCulture);

                                                string buttonColor = "present-btn";
                                                string attedenceType = "Present";
                                                int hours = 00;
                                                int minutes = 00;
                                                int seconds = 00; // Initialize seconds variable

                                                if (endtimeWithAmPm != null)
                                                {
                                                    // Initialize endTime as null
                                                    DateTime? endTime = empCheckin.Signout_Time;

                                                    // Calculate time difference
                                                    TimeSpan? timeDifference = endTime - empCheckin.Signin_Time;

                                                    // Convert time difference to hours, minutes, and seconds
                                                    hours = (int)timeDifference?.TotalHours;
                                                    minutes = (int)timeDifference?.Minutes;
                                                    seconds = (int)timeDifference?.Seconds; // Calculate seconds

                                                }
                                                else
                                                {
                                                    if (empCheckin.Login_date == DateTime.Today)
                                                    {
                                                        // Calculate time difference
                                                        TimeSpan? timeDifference = DateTime.Now - empCheckin.Signin_Time;

                                                        // Convert time difference to hours, minutes, and seconds
                                                        hours = (int)timeDifference?.TotalHours;
                                                        minutes = (int)timeDifference?.Minutes;
                                                        seconds = (int)timeDifference?.Seconds; // Calculate seconds
                                                    }
                                                }

                                                if (empLeave != null)
                                                {
                                                    if (empLeave.DayType == "fullDay")
                                                    {
                                                        buttonColor = "leave-btn";
                                                        attedenceType = "Leave";
                                                    }
                                                    if (empLeave.DayType == "halfDay")
                                                    {
                                                        buttonColor = "leave-btn";
                                                        attedenceType = "H/D Leave";
                                                    }
                                                    if (empLeave.DayType == "")
                                                    {
                                                        buttonColor = "yellow-btn";
                                                        attedenceType = "Permission";
                                                    }
                                                }
                                            }

                                            <td>@starttimeWithAmPm</td>
                                            <td>@endtimeWithAmPm</td>

                                            <td class="bar-wd">@hours.ToString("00").Trim()h:@minutes.ToString("00").Trim()m</td>
                                            <td><button class="@buttonColor" style="pointer-events:none">@attedenceType</button></td>
                                            <td><i class="fas fa-pencil-alt empattendence-edit" data-attendenceid="34" data-toggle="modal" data-target="#leaveUpdateModal"></i></td>
                                        </tr>
                                    }
                                    else
                                    {
                                        var leaveType = "Absent";
                                        var buttoncolorcode = "absent-btn";
                                        if (@Model.SelectedDate.DayOfWeek == DayOfWeek.Saturday || Model.SelectedDate.DayOfWeek == DayOfWeek.Sunday)
                                        {
                                            leaveType = "Weekend";
                                            buttoncolorcode = "gray-btn";
                                        }

                                        if (empLeave != null)
                                        {
                                            if (empLeave.leavecategory.ToLowerInvariant().Contains("leave"))
                                            {
                                                leaveType = "Leave";
                                                buttoncolorcode = "leave-btn";
                                            }
                                            if (empLeave.leavecategory.ToLowerInvariant().Contains("permission"))
                                            {
                                                leaveType = "Permission";
                                                buttoncolorcode = "yellow-btn";
                                            }
                                        }
                                        <tr>
                                            <td><span class="employee-id">@employee.EmployeeID</span></td>
                                            <td class="employee-info p-2">
                                                @if (!string.IsNullOrEmpty(employee.imagepath))
                                                {
                                                    <img src="@imagePath" alt="@employee.EmployeeID" class="attemployee-image mr-2 ml-2">
                                                }
                                                else
                                                {
                                                    <div class="initials-circle mr-2 ml-2">@initials</div>
                                                }
                                                <div class="employee-details mt-2 ml-2">
                                                    @employee.EmployeeName<br>
                                                    <small>@employee.OfficalEmailid</small>
                                                </div>
                                                <span class="emp-logindate" style="display: none">@Model.SelectedDate.ToString("dd MMMM yyyy")</span>
                                            </td>
                                            <td>@employee.Location</td>
                                            <td>@Model.SelectedDate.ToString("dd MMMM yyyy")</td>

                                            <td>---</td>
                                            <td>---</td>
                                            <td>---</td>
                                            <td><button class="@buttoncolorcode" style="pointer-events:none">@leaveType</button></td>
                                            <td><i class="fas fa-pencil-alt empattendence-edit" data-attendenceid="34" data-toggle="modal" data-target="#leaveUpdateModal"></i></td>
                                        </tr>
                                    }
                                }




                            </tbody>
                        </table>
                        <div class="modal fade" id="leaveUpdateModal" tabindex="-1" role="dialog" aria-labelledby="leaveUpdateModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content" style="width:90%">
                                    <div class="modal-header" style="padding:0.75rem 0.75rem;">
                                        <h5 class="modal-title ml-2" id="leaveUpdateModalLabel">Attendance Update</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border:none;">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body" style="padding-top: 0;">
                                        <div class="container-fluid p-4 m-0">
                                            <div class="row">
                                                <div class="col-12 d-flex flex-column pb-3">
                                                    <label for="leaveupdate_name">Employee Name</label>
                                                    <input type="text" class="form-control leaveupdate_name" readonly>
                                                    <input type="text" class="form-control leaveupdate_empid" readonly style="display: none">
                                                </div>
                                                <div class="col-12 d-flex flex-column pb-3">
                                                    <label for="leaveupdate_date">Date</label>
                                                    <input type="date" class="form-control leaveupdate_date" readonly>
                                                </div>
                                                <div class="col-6 d-flex flex-column pb-3 col-sm-12 col-md-6">
                                                    <label for="leaveupdate_checkin">Check In</label>
                                                    <input type="time" class="form-control leaveupdate_checkin">
                                                </div>
                                                <div class="col-6 d-flex flex-column pb-3 col-sm-12 col-md-6">
                                                    <label for="leaveupdate_checkout">Check Out</label>
                                                    <input type="time" class="form-control leaveupdate_checkout">
                                                </div>
                                                <div class="col-3 ml-auto mr-4 mt-2 res-submit-btn">
                                                    <button type="button" data-updateid="" class="btn btn-primary leaveupdate_btn">Update</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        if (!$.fn.DataTable.isDataTable('#adminaddendancetable')) {
            $('#adminaddendancetable').DataTable({
                "paging": false,
                "searching": true,
                "ordering": false,
                "scrollY": '50vh',
                "scrollCollapse": true,
                "info": true,
                "autoWidth": false,
                "lengthMenu": [[7, 14, 21, -1], [7, 14, 21, "All"]],
                "columnDefs": [
                    { "orderable": false, "targets": 1 }, // Disable ordering on the Checkin-Check-Out column
                    { "orderable": false, "targets": 3 }  // Disable ordering on the Status column
                ]
            });
        }
    });

    $(document).on('change', '#location-dropdown', function (event) {
        var location = $(this).val();
        if (location == "All") {
            location = "";
        }
        $('#adminaddendancetable').DataTable().column(2).search(location).draw();
    });

    $(document).on('change', '#status-dropdown', function (event) {
        var status = $(this).val();
        if (status == "All") {
            status = "";
        }
        $('#adminaddendancetable').DataTable().column(7).search(status).draw();
    });

    // Apply search filter on DataTable based on input value
    $(document).on('keyup', '#adminAttedencetableSearch', function (event) {
        $('#adminaddendancetable').DataTable().search($(this).val()).draw();
    });



</script>
