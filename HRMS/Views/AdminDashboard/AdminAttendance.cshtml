@model HRMS.Models.Admin.AdminAttendanceModel

<div class="admin-attendancemgmt-view">
    <div style="margin-left: 2%">
        <style>
            .employee-image {
                width: 40px;
                height: 40px;
                border-radius: 50%;
            }

            .initials-circle {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                background-color: #007bff;
                color: #fff;
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: bold;
                margin-right: 10px;
            }

            .employee-info {
                display: flex;
                align-items: center;
            }

            .employee-details {
                margin-left: 10px;
            }

            .employee-id {
                margin-right: 10px;
            }

            #adminaddendancetable_filter {
                display: none;
            }

            #adminaddendancetable_length {
                display: none;
            }

            .future {
                color: blue; /* Example color for future dates */
            }

            .weekend {
                color: red; /* Example color for weekend dates */
            }

            .day.active {
                font-weight: bold; /* Example style for active date */
            }

            /* Updated styles for the day divs without borders */
            .day {
                display: inline-block;
                width: 29px;
                height: 29px;
                text-align: center;
                line-height: 29px;
                margin: 2px;
                cursor: pointer;
                font-size: 14px;
            }

                .day:hover {
                    background-color: #f0f0f0;
                }
            table.dataTable.display tbody td,
            table.dataTable thead th{
                border:none;
            }
            .leaveupdate_view {
                width: 25%;
                border: 1px solid transparent;
                background-color: white;
                border-radius: 10px;
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                z-index: 9999; /* Ensure the popup view appears above other elements */
                display: none; /* Hide the popup initially */
            }

                .leaveupdate_view input,
                .leaveupdate_view select {
                    border: 1px solid #BFBFBF;
                    height: 30px;
                }

                    .leaveupdate_view input[readonly],
                    .leaveupdate_view select[readonly] {
                        background-color: #f0f0f0;
                    }

                    .leaveupdate_view input::placeholder {
                        color: #929292;
                        font-size: 14px;
                    }

                    .leaveupdate_view input[type="date" i]::placeholder {
                        color: #929292;
                    }

                .leaveupdate_view label {
                    font-size: 13px;
                    font-weight: 600;
                    margin-bottom: 0px;
                }

            .leaveupdate_body {
                display: flex;
                justify-content: center;
                align-items: center;
                height: 100vh;
                margin: 0;
                background-color: #94949466;
            }
        </style>

        <div class="row mb-2 align-items-center">
            <div class="col-4">
                <h3>Attendance</h3>
            </div>

            <div class="col-8">
                <div class="dropdowns-container d-flex  align-items-center">
                    <div class="search-container mr-2">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" style="background-color: transparent; border-right: none; border-radius: 10px 0 0 10px; height: 35px;"><i class="fas fa-search"></i></span>
                            </div>
                            <input type="text" id="adminAttedencetableSearch" placeholder="Search By Keyword" class="advancesearch form-control" aria-label="Search By Keyword" style="border-radius: 0 10px 10px 0; height: 35px; font-size: 14px;">
                        </div>
                    </div>

                    <div class="form-group mr-2 status-drop adminatt-dropdown" style="margin-top: 10px;">
                        <select class="form-control form-select-sm" name="status" id="status-dropdown">
                            <option value="" disabled selected>Status</option>
                            <option value="Present">Present</option>
                            <option value="Leave">Leave</option>
                            <option value="Permission">Permission</option>
                            <option value="All">All</option>
                        </select>
                    </div>



                    <div class="form-group mr-2 adminatt-dropdown" style="margin-top: 10px;">
                        <select class="form-control form-select-sm" name="status" id="location-dropdown">
                            <option value="" disabled selected>Location</option>
                            <option value="Hyderabad">Hyderabad</option>
                            <option value="Madurai">Madurai</option>
                            <option value="All">All</option>
                        </select>
                    </div>


                    <!-- Dropdown for Export options -->
                    <div class="form-group mr-2 adminatt-dropdown ml-2" style="margin-top: 17px;">
                        <label class="export-label" for="exportLabel">Export</label>
                        <i class="fas fa-chevron-down ml-3" id="exportIcon" style="cursor: pointer; font-size:13px;" data-toggle="collapse" data-target="#dateDropdown"></i>
                    </div>



                    <div class="mb-2 ml-4">
                        <button type="button" class="btn btn-primary btn-addshift ml-2">Add Shift</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="collapse" id="dateDropdown">
            <div class="row mb-3 align-items-center">
                <div class="col-4"></div> <!-- Empty column -->
                <div class="col-8 d-flex justify-content-end" style="margin-left: 33%">
                    <div class="form-group d-flex mr-2">
                        <label for="from" class="mr-2">From</label>
                        <input type="date" class="form-control form-control-sm" id="fromDate" style="width: 120px;">
                    </div>
                    <div class="form-group d-flex mr-2">
                        <label for="to" class="mr-2">To</label>
                        <input type="date" class="form-control form-control-sm" id="toDate" style="width: 120px;">
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-sm btn-primary" onclick="submitDateRange()">Submit</button>
                    </div>
                </div>
            </div>
        </div>


        <div class="row mb-3">
            <div class="col">
                <div class="dropdowns-container">
                    <div class="dropdown month-dropdown mr-2">
                        <input type="month" id="attedencemonth" value="" class="form-control">
                    </div>
                    <div class="days-container" id="daysContainer">
                        <!-- Dates will be added dynamically here -->
                    </div>
                </div>
            </div>
        </div>

        <div class="table-container" style="border-radius: 10px; overflow: hidden;">
            <table id="adminaddendancetable" class="display" style="width: 100%;">
                <thead style="background-color: #EEF4FF; height: 35px;">
                    <tr>
                        <th style="padding-left: 15px">Employee Name</th>
                        <th>Location</th>
                        <th>Date</th>
                        <th>Check-in</th>
                        <th>Check-out</th>
                        <th>Hours</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (emp_info employee in Model.AllEmployees)
                    {
                        var empCheckin = Model.EmpCheckInList.Where(x => x.EmployeeID == employee.EmployeeID).FirstOrDefault();

                        var imagePath = "";
                        string initials = string.Empty;
                        if (!string.IsNullOrEmpty(employee.imagepath))
                        {
                            imagePath = "/assets/empImages/" + employee.imagepath;
                        }
                        else
                        {
                            var words = employee.EmployeeName.Split(' ');
                            if (words.Length >= 2)
                            {
                                initials = $"{words[0][0]}{words[1][0]}";
                            }
                            else if (words.Length == 1)
                            {
                                initials = $"{words[0][0]}";
                            }
                        }


                        if (empCheckin != null)
                        {
                            <tr class="hoverable-row">
                                <td class="employee-info" style="padding-left: 15px">
                                    <span class="employee-id">@empCheckin.EmployeeID</span>
                                    @if (!string.IsNullOrEmpty(employee.imagepath))
                                    {
                                        <img src="@imagePath" alt="@empCheckin.EmployeeID" class="employee-image">
                                    }
                                    else
                                    {
                                        <div class="initials-circle">@initials</div>
                                    }

                                    <div class="employee-details">
                                        @empCheckin.EmployeeName<br>
                                        <small>@empCheckin.OfficalEmailid</small>
                                    </div>

                                    <span class="emp-logindate" style="display: none">@empCheckin.Login_date.ToString("dd MMMM yyyy")</span>
                                </td>
                                <td>@empCheckin.Location</td>
                                <td>@empCheckin.Login_date.ToString("dd MMMM yyyy")</td>

                                @{
                                    string starttimeWithAmPm = empCheckin.Signin_Time.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);
                                    string endtimeWithAmPm = empCheckin.Signout_Time?.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);

                                    string statusType = "bar-width-green";
                                    string buttonColor = "present-btn";
                                    string attedenceType = "Present";
                                    int hours = 00;
                                    int minutes = 00;

                                    if (endtimeWithAmPm != null)
                                    {
                                        // Initialize endTime as null
                                        DateTime? endTime = null;
                                        endTime = empCheckin.Signout_Time;


                                        // Calculate time difference
                                        TimeSpan? timeDifference = endTime - empCheckin.Signin_Time;

                                        // Convert time difference to hours and minutes
                                        hours = (int)timeDifference?.TotalHours;
                                        minutes = (int)timeDifference?.Minutes;

                                        if (hours < 9)
                                        {
                                            statusType = "bar-width-yellow";
                                            buttonColor = "yellow-btn";
                                            attedenceType = "Permission";
                                        }
                                    }
                                    else
                                    {
                                        if (empCheckin.Login_date == DateTime.Today)
                                        {
                                            // Calculate time difference
                                            TimeSpan? timeDifference = DateTime.Now - empCheckin.Signin_Time;

                                            // Convert time difference to hours and minutes
                                            hours = (int)timeDifference?.TotalHours;
                                            minutes = (int)timeDifference?.Minutes;
                                        }
                                    }

                                }

                                <td>@starttimeWithAmPm</td>
                                <td>@endtimeWithAmPm</td>
                                <td class="bar-wd">@hours.ToString("00").Trim()h:@minutes.ToString("00").Trim()m</td>
                                <td><button class="@buttonColor">@attedenceType</button></td>
                                <td><i class="fas fa-pencil-alt"></i></td>
                            </tr>
                        }
                        else
                        {
                            <tr>

                                <td class="employee-info" style="padding-left: 15px">
                                    <span class="employee-id">@employee.EmployeeID</span>
                                    @if (!string.IsNullOrEmpty(employee.imagepath))
                                    {
                                        <img src="@imagePath" alt="@employee.EmployeeID" class="employee-image">
                                    }
                                    else
                                    {
                                        <div class="initials-circle">@initials</div>
                                    }
                                    <div class="employee-details">
                                        @employee.EmployeeName<br>
                                        <small>@employee.OfficalEmailid</small>
                                    </div>
                                    <span class="emp-logindate" style="display: none">@Model.SelectedDate.ToString("dd MMMM yyyy")</span>
                                </td>
                                <td>@employee.Location</td>
                                <td>@Model.SelectedDate.ToString("dd MMMM yyyy")</td>

                                <td>00:00 AM</td>
                                <td>00:00 AM</td>
                                <td>00h:00m</td>
                                <td><button class="leave-btn">Leave</button></td>
                            </tr>
                        }
                    }




                </tbody>
            </table>
            <div class="container-fluid p-4 m-0 leaveupdate_view" style="display: none;">
                <div class="row">
                    <div class="col-12 d-flex flex-column pb-3">
                        <label for="leaveupdate_name">Employee Name</label>
                        <input type="text" class="leaveupdate_name" readonly>
                    </div>
                    <div class="col-12 d-flex flex-column pb-3">
                        <label for="leaveupdate_date">Date</label>
                        <input type="date" class="leaveupdate_date" readonly>
                    </div>
                    <div class="col-6 d-flex flex-column pb-3">
                        <label for="leaveupdate_checkin">Check In</label>
                        <input type="time" class="leaveupdate_checkin">
                    </div>
                    <div class="col-6 d-flex flex-column pb-3">
                        <label for="leaveupdate_checkout">Check Out</label>
                        <input type="time" class="leaveupdate_checkout">
                    </div>
                    <div class="col-12 d-flex flex-column pb-3">
                        <label for="eleaveupdate_status">Status</label>
                        <select name="eleaveupdate_status" id="eleaveupdate_status">
                            <option value="present">Present</option>
                            <option value="absent">Absent</option>
                        </select>
                    </div>
                    <div class="col-3 ml-auto mr-4 mt-2">
                        <button type="button" class="btn btn-primary leaveupdate_btn">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            if (!$.fn.DataTable.isDataTable('#adminaddendancetable')) {
                $('#adminaddendancetable').DataTable({
                    "paging": true,
                    "searching": true,
                    "ordering": false,
                    "info": true,
                    "autoWidth": false,
                    "lengthMenu": [[7, 14, 21, -1], [7, 14, 21, "All"]],
                    "columnDefs": [
                        { "orderable": false, "targets": 1 }, // Disable ordering on the Checkin-Check-Out column
                        { "orderable": false, "targets": 3 }  // Disable ordering on the Status column
                    ]
                });
            }
        });

        $(document).on('change', '#location-dropdown', function (event) {
            var location = $(this).val();
            if (location == "All") {
                location = "";
            }
            $('#adminaddendancetable').DataTable().column(1).search(location).draw();
        });

        $(document).on('change', '#status-dropdown', function (event) {
            var status = $(this).val();
            if (status == "All") {
                status = "";
            }
            $('#adminaddendancetable').DataTable().column(6).search(status).draw();
        });

        // Apply search filter on DataTable based on input value
        $(document).on('keyup', '#adminAttedencetableSearch', function (event) {
            $('#adminaddendancetable').DataTable().search($(this).val()).draw();
        });

    </script>
</div>
