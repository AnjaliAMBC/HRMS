@model HRMS.Models.Admin.AdminEmpIndividualAttendanceModel

<div class="admin-attendancemgmt-view">
    <style>
        #adminaddendancetable_length {
            display: none;
        }

        #adminaddendancetable_filter {
            display: none;
        }

        table.dataTable.display tbody td, table.dataTable.display tbody th {
            border: none;
        }
    </style>
    <div class="container-fluid res-admin-individual-attendance" style="width:98%;">
        <div class="row align-items-center">
            <div class="col col-sm-12 col-md-12 col-lg-4">
                <h4 class="ml-3 admin-individual-att-title-header">@Model.SelectedEmployee.EmployeeName</h4>
            </div>
            <div class="col col-sm-12 col-lg-8 res-admin-individual-att-from-to" style="margin-left:12%">
                <form class="form-inline">
                    <label for="fromDate" class="mr-2">From</label>

                    @if (@Model.SelectedStartDate != DateTime.MinValue)
                    {
                        @Html.TextBoxFor(m => m.SelectedStartDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control mr-2", @id = "empfromDate", @style = "font-size: 13px;" })

                    }
                    else
                    {
                        <input type="date" class="form-control mr-2" id="empfromDate" value="@Model.SelectedStartDate" style="font-size: 12px;">
                    }

                    <label for="toDate" class="mr-2">To</label>

                    @if (@Model.SelectedEndDate != DateTime.MinValue)
                    {
                        @Html.TextBoxFor(m => m.SelectedEndDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control mr-4", @id = "emptoDate", @style = "font-size: 13px;" })

                    }
                    else
                    {
                        <input type="date" class="form-control mr-4" id="emptoDate" value="@Model.SelectedEndDate" style="font-size: 12px;">
                    }

                    <span class="selectedEmpID" style="display: none">@Model.SelectedEmployee.EmployeeID</span>

                    <button type="button" class="btn btn-primary mr-4" id="applyButton" style="">Apply</button>
                    <a href="#" id="downloademp-attedenceLink"><i class="fa-solid fa-arrow-up-from-bracket" style="font-size:20px"></i></a>
                </form>
            </div>
        </div>
    </div>
    <div class="res-admin-attendance-individual table-container mt-4 table-responsive" style="border-radius: 10px; overflow: hidden;">
        <table id="adminaddendancetable" class="display ml-4">
            <thead style="background-color: #EEF4FF; ">
                <tr>
                    <th>Date</th>
                    <th>Shift</th>
                    <th>Check in</th>
                    <th>Check out</th>
                    <th>Hours</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody class="res-admin-individual-attendance-table">
                @foreach (System.DateTime date in Model.AllDates)
                {
                    var isWeekendDate = date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday;
                    var weekendtext = "";
                    if (isWeekendDate)
                    {
                        weekendtext = "weekend";
                    }

                    var isCheckInExists = Model.EmpCheckInList.Where(x => x.Login_date == date).FirstOrDefault();

                    var empLeave = Model.Leaves.Where(x => x.leavedate == date && (x.LeaveStatus != "Rejected" && x.LeaveStatus != "Cancelled")).FirstOrDefault();

                    if (isCheckInExists != null)
                    {
                        string starttimeWithAmPm = isCheckInExists.Signin_Time.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);
                        string endtimeWithAmPm = isCheckInExists.Signout_Time?.ToString("hh:mm tt", System.Globalization.CultureInfo.InvariantCulture);

                        string statusType = "bar-width-green";
                        string buttonColor = "present-btn";
                        string attedenceType = "Present";
                        int hours = 00;
                        int minutes = 00;

                        if (endtimeWithAmPm != null)
                        {
                            // Initialize endTime as null
                            DateTime? endTime = null;
                            endTime = isCheckInExists.Signout_Time;


                            // Calculate time difference
                            TimeSpan? timeDifference = endTime - isCheckInExists.Signin_Time;

                            // Convert time difference to hours and minutes
                            hours = (int)timeDifference?.TotalHours;
                            minutes = (int)timeDifference?.Minutes;

                            //if (hours < 9)
                            //{
                            //    statusType = "bar-width-yellow";
                            //    buttonColor = "yellow-btn";
                            //    attedenceType = "Permission";
                            //}
                        }
                        else
                        {
                            if (isCheckInExists.Login_date == DateTime.Today)
                            {
                                // Calculate time difference
                                TimeSpan? timeDifference = DateTime.Now - isCheckInExists.Signin_Time;

                                // Convert time difference to hours and minutes
                                hours = (int)timeDifference?.TotalHours;
                                minutes = (int)timeDifference?.Minutes;
                            }
                        }

                        if (empLeave != null)
                        {
                            if (empLeave.DayType == "fullDay")
                            {
                                statusType = "bar-width-red";
                                attedenceType = "Leave";
                                buttonColor = "leave-btn";
                            }
                            if (empLeave.DayType == "halfDay")
                            {
                                if (empLeave.HalfDayCategory == "First Half")
                                {
                                    buttonColor = "firsthalf-leave-button";
                                    statusType = "bar-width-firsthalf-leave";
                                }
                                else
                                {
                                    buttonColor = "secondhalf-leave-button";
                                    statusType = "bar-width-second-leave";
                                }

                                attedenceType = "H/D Leave";

                            }
                            if (empLeave.DayType == "")
                            {
                                statusType = "bar-width-yellow";
                                attedenceType = "Permission";
                                buttonColor = "yellow-btn";
                            }

                        }

                        <tr>
                            <th scope="row">@isCheckInExists.Login_date.ToString("dd MMMM yyyy") <br><span class="fntblur">@isCheckInExists.Login_date.ToString("ddd", System.Globalization.CultureInfo.InvariantCulture)</span></th>
                            <td class="">@Model.SelectedEmployee.ShiftTimings</td>
                            <td class="">@starttimeWithAmPm</td>
                            <td class="">@endtimeWithAmPm</td>
                            <td class="bar-wd">@hours.ToString("00").Trim()h:@minutes.ToString("00").Trim()m</td>
                            <td><button class="@buttonColor">@attedenceType</button></td>
                        </tr>
                    }
                    else
                    {
                        string statusType = "bar-width-gray";
                        string buttonColor = "gray-btn";
                        string attedenceType = "Weekend";
                        if (!isWeekendDate)
                        {
                            if (empLeave != null)
                            {
                                if (empLeave.leavecategory.ToLowerInvariant().Contains("leave") || empLeave.leavecategory.ToLowerInvariant().Contains("comp off"))
                                {
                                    statusType = "bar-width-red";
                                    attedenceType = "Leave";
                                    buttonColor = "leave-btn";
                                }
                                if (empLeave.leavecategory.ToLowerInvariant().Contains("permission"))
                                {
                                    statusType = "bar-width-yellow";
                                    attedenceType = "Permission";
                                    buttonColor = "yellow-btn";
                                }
                            }
                            else
                            {
                                statusType = "bar-width-blue";
                                attedenceType = "Absent";
                                buttonColor = "absent-btn";
                            }
                        }

                        <tr>
                            <th scope="row">@date.ToString("dd MMMM yyyy") <br><span class="fntblur">@date.ToString("ddd", System.Globalization.CultureInfo.InvariantCulture)</span></th>
                            <td class="">@Model.SelectedEmployee.ShiftTimings</td>
                            <td class="">00:00 AM</td>
                            <td class="">00:00 AM</td>
                            <td class="bar-wd">00h:00m</td>
                            <td><button class="@buttonColor">@attedenceType</button></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <script>

        $(document).ready(function () {
            if (!$.fn.DataTable.isDataTable('#adminaddendancetable')) {
                $('#adminaddendancetable').DataTable({
                    "paging": true,
                    "searching": true,
                    "ordering": false,
                    "info": true,
                    "autoWidth": false,
                    "lengthMenu": [[7, 14, 21, -1], [7, 14, 21, "All"]],
                    "columnDefs": [
                        { "orderable": false, "targets": 1 }, // Disable ordering on the Checkin-Check-Out column
                        { "orderable": false, "targets": 3 }  // Disable ordering on the Status column
                    ]
                });
            }
        });

    </script>
</div>
