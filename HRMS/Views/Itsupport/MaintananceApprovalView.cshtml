@model HRMS.Models.ITsupport.MaintananceModel

@Html.Partial("_NavBar")
@{
    ViewBag.Title = "MaintananceApprovalView";

    var statusList = new List<string>();
    statusList.Add("Pending");
    statusList.Add("Completed");

}

<div class="container-fluid">
    <div class="hiddenadmindashboard" style="display: none"></div>
    @Html.Partial("_adminsidemenu")
    <div class="main-content container-fluid maintenanceapprove-tab" style="width: 84%">
        <div class="content admin-maintenanceapprove-container" style="margin-left: -10px; ">
            <div class="admin-maintenanceapprove-view">
                <div class="container-fluid">
                    <div class="maintenanceapprove-details">
                        <div class="maintenanceapprove-header-title">
                            <span class="maintenanceapprove-image-btn">
                                @foreach (var emp in Model.Employees.Where(x => x.EmployeeID == Model.EditableRecord.EmployeeID))
                                {

                                    if (emp.imagepath != null && !string.IsNullOrWhiteSpace(emp.imagepath))
                                    {
                                        var empImageURl = System.Configuration.ConfigurationManager.AppSettings["EmpImagesFolder"] + "/" + emp.imagepath + "?" + System.DateTime.Now;
                                        <img src="@empImageURl" alt="Employee Image" class="userIcon">
                                    }
                                    else
                                    {
                                        // Default image logic using initials
                                        if (!string.IsNullOrEmpty(emp.EmployeeName))
                                        {
                                            string[] names = emp.EmployeeName.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);

                                            if (names.Length > 0)
                                            {
                                                string firstName = names[0];
                                                string lastName = names.Length > 1 ? names[names.Length - 1] : string.Empty;
                                                char firstLetterOfFirstName = char.ToUpper(firstName[0]);
                                                char firstLetterOfLastName = !string.IsNullOrEmpty(lastName) ? char.ToUpper(lastName[0]) : '\0';

                                                <div class="default-image-navbar">
                                                    @firstLetterOfFirstName @firstLetterOfLastName
                                                </div>
                                            }
                                        }

                                    }
                                }

                            </span><span class="maintenanceapprove-id-select" data-assetid="name">@Model.EditableRecord.EmployeeName</span>
                        </div>
                        <div class="maintenanceapprove-info">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 maintenanceapprove-left-block-main">
                                    <div class="col-lg-6 col-md-6">
                                        <div class="form-group maintenanceapproved-tabs">
                                            <label for="MaintenanceApproved-Date">Maintenance Date</label>

                                            @if (Model.EditableRecord.MaintenanceDate != DateTime.MinValue)
                                            {
                                                @Html.TextBoxFor(m => m.EditableRecord.MaintenanceDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @id = "MaintenanceApproved-Date" })
                                            }
                                            else
                                            {
                                                <input type="date" class="form-control" id="MaintenanceApproved-Date" value="@Model.EditableRecord.MaintenanceDate" readonly>
                                            }

                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="form-group maintenanceapproved-tabs">
                                            <label for="MaintenanceApproved-Reschedule">Reschedule Date</label>

                                            @if (Model.EditableRecord.RescheduleDate != DateTime.MinValue)
                                            {
                                                @Html.TextBoxFor(m => m.EditableRecord.RescheduleDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @id = "MaintenanceApproved-Reschedule" })
                                            }
                                            else
                                            {
                                                <input type="date" class="form-control" id="MaintenanceApproved-Reschedule" value="@Model.EditableRecord.RescheduleDate" readonly>
                                            }


                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="form-group maintenanceapproved-tabs">
                                            <label for="MaintenanceApproved-AgentName">Agent Name</label>
                                            <select name="MaintenanceApproved-AgentName" class="MaintenanceApproved-AgentName form-control form-select" id="MaintenanceApproved-AgentName" readonly>
                                                <option value="" disabled selected hidden>Select Agent</option>
                                                @foreach (var itemep in Model.ITEmployees)
                                                {
                                                    var selectedEmpStatusItem = !string.IsNullOrEmpty(Model.EditableRecord.AgentID) && (Model.EditableRecord.AgentID == itemep.EmployeeID) ? "selected" : "";
                                                    <option value="@itemep.EmployeeID" @selectedEmpStatusItem>@itemep.EmployeeName</option>
                                                }

                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="form-group maintenanceapproved-tabs">
                                            <label for="MaintenanceApproved-Status">Status</label>
                                            <select name="MaintenanceApproved-Status" class="MaintenanceApproved-Status form-control form-select" id="MaintenanceApproved-Status">
                                                <option value="" disabled selected hidden>Select Agent</option>

                                                @foreach (var staus in statusList)
                                                {
                                                    var selectedStatusItem = !string.IsNullOrEmpty(Model.EditableRecord.Status) && (Model.EditableRecord.Status == staus) ? "selected" : "";

                                                    <option value="@staus" @selectedStatusItem>@staus</option>
                                                }


                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6">
                                        <div class="form-group maintenanceapproved-tabs">
                                            <label for="MaintenanceApproved-Notes">Notes</label>
                                            <input type="text" class="form-control" id="MaintenanceApproved-Notes" value="@Model.EditableRecord.Notes">
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-12 col-md-12 text-right">
                                            <button type="button" class="btn btn-primary maintenance-updatestatus" data-maintenancesno="@Model.EditableRecord.Sno">Update</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="MaintenancemessageModal" tabindex="-1" role="dialog" aria-labelledby="MaintenancemessageModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="MaintenancemessageModalLabel">Message</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="MaintenancemodalMessage">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-close-refreshmaintenance">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/Z-Maintanance.js"></script>



