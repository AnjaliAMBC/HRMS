@model HRMS.Models.ITsupport.SubscriptionViewModel
@{
    var isEditRecord = false;

    if (Model != null)
    {
        isEditRecord = Model.Editsubscription != null && Model.Editsubscription.SubscriptionID != 0;
    }
}
<style>

    .is-invalid {
        border-color: red !important;
    }

    /* Custom styles for error messages */
    .invalid-feedback {
        color: red;
        display: none;
    }

    /* Show error message when field is invalid */
    .is-invalid ~ .invalid-feedback {
        display: block;
    }
</style>
@Html.Partial("_NavBar")
<div class="container-fluid">
    <div class="hiddenadmindashboard" style="display: none"></div>
    @Html.Partial("_adminsidemenu")
    <div class="main-content container-fluid subscriptionAdding-tab" style="width: 84%">
        <div class="content admin-subscriptionadd-container">
            <div class="admin-subscription-add">
                <div class="container-fluid top admin-subscriptionadd">
                    <div class="row navbar align-items-center mt-2">
                        <h4 class="header mb-0 text-right">@Model.Headline</h4>
                    </div>
                    <div style="display:none" class="isnewsubscription">@Model.IsNewSubscription</div>
                    <form id="subscriptionadd-form" class="admin-subscriptionform needs-validation" novalidate>
                        <div class="container" style="margin-left: 5px">
                            <div class="row">
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionID">Subscription ID*</label>
                                        @if (!isEditRecord)
                                        {
                                            <input type="text" class="form-control" name="SubscriptionID" value="@Model.NewSubscriptionId" id="SubscriptionID" placeholder="Enter Subscription ID" required readonly>
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control" name="SubscriptionID" value="@Model.Editsubscription.SubscriptiionNumber" id="SubscriptionID" placeholder="Enter Subscription ID" required readonly>
                                        }
                                        <div class="invalid-feedback">Subscription ID is required.</div>
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionName">Subscription Name*</label>
                                        <input type="text" class="form-control" name="SubscriptionName" id="SubscriptionName" placeholder="Enter Subscription Name" value="@Model.Editsubscription.SubscriptionName" required>
                                        <div class="invalid-feedback">Subscription Name is required.</div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionLogo" style="width:100%;">Subscription Logo</label>
                                        <div class="upload-btn-wrapper sub2wrapper">
                                            <button class="btn subscriptionadd-upload-btn" type="button">Upload</button>

                                            <input type="file" class="form-control" name="SubscriptionLogo" id="SubscriptionLogo"
                                                   data-existingfile="@Model.Editsubscription.SubscriptionLogo"
                                                   accept=".jpeg,.png,.jpg,.pdf,.doc,.docx,.xls,.xlsx">
                                        </div>

                                        @if (!string.IsNullOrEmpty(Model.Editsubscription.SubscriptionLogo))
                                        {
                                            var imageParentFoler = System.Configuration.ConfigurationManager.AppSettings["TicketingFolderPath"];
                                            <a class="itp_filepath sublogo-2" href="@System.Configuration.ConfigurationManager.AppSettings["TicketingAbsolutePath"]/subscription/@Model.Editsubscription.SubscriptionLogo" target="_blank">
                                                @Model.Editsubscription.SubscriptionLogo
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="itp_filepath sublogo-2" style="display:none;" target="_blank"></a>
                                        }
                                    </div>
                                </div>



                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionCategory">Category*</label>
                                        <input type="text" class="form-control" name="SubscriptionCategory" id="SubscriptionCategory" placeholder="Enter Category Name" value="@Model.Editsubscription.Category" required>
                                        <div class="invalid-feedback">Category is required.</div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionPurchasedate">Purchase Date*</label>
                                        @if (Model.Editsubscription.PurchaseDate != DateTime.MinValue)
                                        {
                                            @Html.TextBoxFor(m => m.Editsubscription.PurchaseDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @id = "SubscriptionPurchasedate", required = true })
                                        }
                                        else
                                        {
                                            <input type="date" class="form-control" id="SubscriptionPurchasedate" value="@Model.Editsubscription.PurchaseDate" required>
                                        }
                                        <div class="invalid-feedback">Purchase Date is required.</div>
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionAmount">Amount</label>
                                        <input type="text" class="form-control" name="SubscriptionAmount" id="SubscriptionAmount" placeholder="Enter Amount" value="@Model.Editsubscription.Amount">
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionLicense">License</label>
                                        <input type="text" class="form-control" name="SubscriptionLicense" id="SubscriptionLicense" placeholder="Enter License" value="@Model.Editsubscription.License">
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionRenewaldate">Renewal Date</label>
                                        @Html.TextBoxFor(m => m.Editsubscription.RenewalDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @id = "SubscriptionRenewaldate" })
                                    </div>
                                </div>



                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionPaymentMethod">Payment Method</label>
                                        <select name="SubscriptionPaymentMethod" class="form-control form-select" id="SubscriptionPaymentMethod">
                                            <option value="" disabled selected hidden>Select Payment Method</option>
                                            <option value="Credit Card" @(Model.Editsubscription.PaymentMethod == "Credit Card" ? "selected" : "")>Credit Card</option>
                                            <option value="Debit Card" @(Model.Editsubscription.PaymentMethod == "Debit Card" ? "selected" : "")>Debit Card</option>
                                            <option value="Upi Payment" @(Model.Editsubscription.PaymentMethod == "Upi Payment" ? "selected" : "")>Upi Payment</option>
                                            <option value="Net Banking" @(Model.Editsubscription.PaymentMethod == "Net Banking" ? "selected" : "")>Net Banking</option>
                                            <option value="Cash" @(Model.Editsubscription.PaymentMethod == "Cash" ? "selected" : "")>Cash</option>
                                            <option value="Online" @(Model.Editsubscription.PaymentMethod == "Online" ? "selected" : "")>Online</option>
                                            <option value="Vendor Payment" @(Model.Editsubscription.PaymentMethod == "Vendor Payment" ? "selected" : "")>Vendor Payment</option>
                                            <option value="Others" @(Model.Editsubscription.PaymentMethod == "Others" ? "selected" : "")>Others</option>

                                        </select>
                                    </div>
                                </div>



                                <div class="col-lg-6 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionRemarks">Remarks</label>
                                        <textarea rows="1" class="form-control" id="SubscriptionRemarks" name="SubscriptionRemarks">@Model.Editsubscription.Remarks</textarea>
                                    </div>
                                </div>

                                <!-- Added By -->
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionAddedBy">Created By*</label>
                                        <select name="SubscriptionAddedBy" class="SubscriptionAddedBy form-control form-select" id="SubscriptionAddedBy" required>
                                            <option value="" disabled selected hidden>Created By</option>
                                            @foreach (var deptEmp in Model.ITDeptEmployees)
                                            {
                                                var isSelected = Model.Editsubscription != null && Model.Editsubscription.CreatedBy == deptEmp.EmployeeName ? "selected" : "";
                                                <option value="@deptEmp.EmployeeName" @isSelected>@deptEmp.EmployeeName</option>
                                            }
                                        </select>

                                        <div class="invalid-feedback">Created By is required.</div>
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group subscriptionadd-tabs">
                                        <label for="SubscriptionAddeddate">Created Date*</label>
                                        <input type="date" class="form-control" name="SubscriptionAddeddate" id="SubscriptionAddeddate"
                                               value="@((Model.Editsubscription?.CreatedDate != DateTime.MinValue) ? Model.Editsubscription.CreatedDate?.ToString("yyyy-MM-dd") : "")"
                                               required>
                                        <div class="invalid-feedback">Created Date is required.</div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-12 col-md-12 text-right">
                                    <button type="button" id="cancelButton" class="btn subscriptionadd-Cancel" onclick="clearForm()">Cancel</button>
                                    <button type="button" class="btn btn-primary subscriptionadd-Update" onclick="validateAndSubmitForm()">
                                        @if (Model.Headline == "Edit Subscription")
                                        {
                                            @:Update
                                        }
                                        else
                                        {
                                            @:Submit
                                        }
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>
<!-- Success Modal -->
<div class="modal fade" id="subscriptionadd-success-popup" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Subscription</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <h6 style="color:forestgreen">Subscription Added Successfully</h6>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary addsubscription-cancel" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary addsubscription-close" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Error Modal -->
<div class="modal fade" id="subscriptionadd-error-popup" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Error</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <h6 id="error-message" style="color:red">An error occurred</h6>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        //var existingFilePath = $('#SubscriptionLogo').data('existingfile');

        //if (existingFilePath) {
        //    // Extract the file name from the existing file path
        //    var existingFileName = existingFilePath.split('\\').pop().split('/').pop();

        //    // Show only the file name, open in a new tab
        //    $('#file-name-display').text(existingFileName);
        //    $('.sublogo-2').attr('href', existingFilePath).text(existingFileName).attr('target', '_blank').show();
        //}

        // When a new file is selected, update the link and show only the file name
        $('#SubscriptionLogo').on('change', function () {
            var fileInput = $('#SubscriptionLogo');
            var file = fileInput[0].files[0];

            if (file) {
                var fileName = file.name;
                var fileUrl = URL.createObjectURL(file);

                // Update the link with the new file name, URL, and ensure it opens in a new tab
                $('#file-name-display').text(fileName);
                $('.sublogo-2').attr('href', fileUrl).text(fileName).attr('target', '_blank').show();

                // Clean up the URL object if a new file is selected again
                $(fileInput).on('change', function () {
                    URL.revokeObjectURL(fileUrl);
                });
            } else {
                // If no file is selected, hide the link
                $('#file-name-display').text('');
                $('.sublogo-2').hide();
            }
        });
    });

</script>
<script src="~/Scripts/z-SubscriptionScript.js"></script>