@model HRMS.Models.ITsupport.PurchaseViewModel

@{
    var formattedPurchaseId = string.Empty;
    var PurchaseID = 0;
    var isEditRecord = false;

    if (Model != null)
    {
        isEditRecord = Model.EditPurchase != null && Model.EditPurchase.PurchaseRequestID != 0;
    }
}

<style>
    .is-invalid .select2-selection {
        border-color: red;
    }

    .is-invalid .select2-container--default .select2-selection--single .select2-selection__rendered {
        color: red;
    }
</style>

@Html.Partial("_NavBar")
<div class="container-fluid">
    <div class="hiddenadmindashboard" style="display: none"></div>
    @Html.Partial("_adminsidemenu")
    <div class="main-content container-fluid PurchaseAdding-tab" style="width: 84%">
        <div class="content admin-purchaseadd-container">
            <div class="admin-purchase-add">
                <div class="container-fluid top admin-purchaseadd">
                    <div class="row navbar align-items-center mt-2">
                        <h4 class="header mb-0 text-right">Add Purchase Request</h4>
                    </div>


                    <form id="purchase-form" class="admin-purchaseform needs-validation" novalidate>
                        <div class="container" style="margin-left: 5px">
                            <div class="row">
                                <div class="col-lg-3 col-md-6" style="padding-left: 0px;">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="PurchaseID">Purchase Request ID*</label>
                                        @if (!isEditRecord)
                                        {
                                            <input type="text" class="form-control" name="PurchaseID" value="@Model.NewPurchaseId" id="PurchaseID" placeholder="Enter Purchase Request ID" required readonly>
                                            <small style="font-size: 12px; float: right; color: gray;">Last Purchase Request ID: @Model.LastePurchaseId</small>
                                        }
                                        else
                                        {
                                            <input type="text" class="form-control" name="PurchaseID" value="@Model.EditPurchase.PRNumber" id="PurchaseID" placeholder="Enter Purchase Request ID" required readonly>
                                        }
                                        <div class="invalid-feedback">Purchase Request ID is required.</div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="AssetType">Asset Type*</label>
                                        @*<div class="d-flex">*@
                                        <select name="AssetType" class="form-control form-select AssetType" id="AssetType" required>
                                            <option value="" disabled selected hidden>Select Asset Type</option>
                                            @foreach (var purchasetype in Model.Assettypes)
                                            {
                                                var selectedVendorType = Model.EditPurchase != null && Model.EditPurchase.AssetType == purchasetype.VendorType1 ? "selected" : "";
                                                <option value="@purchasetype.VendorType1" @selectedVendorType>
                                                    @purchasetype.VendorType1
                                                </option>
                                            }
                                        </select>

                                        @*</div>*@
                                        <div class="invalid-feedback">Asset Type is required.</div>
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="RequiredOn">Required On*</label>

                                        @if (Model.EditPurchase.RequiredOn != DateTime.MinValue)
                                        {
                                            @Html.TextBoxFor(m => m.EditPurchase.RequiredOn, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @id = "RequiredOn" })
                                        }
                                        else
                                        {
                                            <input type="date" class="form-control" id="RequiredOn" value="@Model.EditPurchase.RequiredOn">
                                        }

                                        <div class="invalid-feedback">Required On is required.</div>
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="Requestedby">Requested By*</label>
                                        @*<div class="d-flex">*@
                                        <select name="Requestedby"
                                                class="form-control form-select Requestedby"
                                                id="Requestedby"
                                                required>
                                            <option value="" disabled selected hidden>Select Requested by</option>
                                            @foreach (var deptEmp in Model.ITDeptEmployees)
                                            {
                                                var selected = !string.IsNullOrEmpty(Model.EditPurchase?.RequestedBy) && (Model.EditPurchase.RequestedBy == deptEmp.EmployeeName) ? "selected" : "";
                                                <option value="@deptEmp.EmployeeName" @selected>@deptEmp.EmployeeName</option>
                                            }
                                        </select>
                                        @*</div>*@
                                        <div class="invalid-feedback">Requested By is required.</div>
                                    </div>
                                </div>
                            </div>

                            <div class="row add-vendor-block">
                                <div class="add-vendor-info">Add Vendor</div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-md-6" style="padding-left: 0px;">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="VendorName-1">Vendor Name</label>
                                        <select name="VendorName-1"
                                                class="VendorName form-control form-select"
                                                id="VendorName-1"
                                                required>
                                            <option value="" disabled selected hidden>Select Vendor Name</option>
                                            @foreach (var vendor in Model.allVendors)
                                            {
                                                var selected = !string.IsNullOrEmpty(Model.EditPurchase?.VendorName1) && Model.EditPurchase.VendorName1 == vendor.VendorName ? "selected" : "";
                                                <option value="@vendor.VedorID" @selected>@vendor.VendorName - @vendor.VedorID</option>
                                            }
                                        </select>
                                        <div class="invalid-feedback">Vendor Name is required.</div>

                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="QuotationPrice-1">Quotation Price</label>
                                        <input type="text"
                                               class="form-control"
                                               name="QuotationPrice-1"
                                               id="QuotationPrice-1"
                                               placeholder="Enter Quotation Price"
                                               value="@Model.EditPurchase.QuotationPrice1"
                                               required>
                                        <div class="invalid-feedback">Quotation Price is required.</div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="AttachFile-1" style="width:100%;">Attach File</label>
                                        <div class="upload-btn-wrapper attach1wrapper">
                                            <button class="btn vendor-upload-btn">Upload</button>
                                            <input type="file"
                                                   class="form-control"
                                                   name="AttachFile-1"
                                                   id="AttachFile-1"
                                                   required
                                                   accept=".pdf,.doc,.docx" data-existingfile="@Model.EditPurchase.AttachFile1">
                                        </div>

                                        @if (!string.IsNullOrWhiteSpace(@Model.EditPurchase.AttachFile1))
                                        {
                                            <a class="itp_filepath attchedfile-1" href="/purchase/@Model.EditPurchase.AttachFile1" target="_blank">@Model.EditPurchase.AttachFile1</a><br />
                                        }

                                        <small style="font-size: 12px; float: left; margin-top: -5px; color: #3E78CF;">File supported PDF, DOCS of 2MB</small>
                                        <div class="invalid-feedback">Attach File is required.</div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3 col-md-6" style="padding-left: 0px;">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="VendorName-2">Vendor Name</label>

                                        <select name="VendorName-2" class="VendorName form-control form-select" id="VendorName-2">
                                            <option value="" disabled selected hidden>Select Vendor Name</option>
                                            @foreach (var vendor in Model.allVendors)
                                            {
                                                var selected = !string.IsNullOrEmpty(Model.EditPurchase?.VendorName2) && Model.EditPurchase.VendorName2 == vendor.VendorName ? "selected" : "";
                                                <option value="@vendor.VedorID" @selected>@vendor.VendorName - @vendor.VedorID</option>
                                            }
                                        </select>

                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="QuotationPrice-2">Quotation Price</label>
                                        <input type="text" class="form-control" value="@Model.EditPurchase.QuotationPrice2" name="QuotationPrice-2" id="QuotationPrice-2" placeholder="Enter Quotation Price">

                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="AttachFile-2" style="width:100%;">Attach File</label>
                                        <div class="upload-btn-wrapper attach2wrapper">
                                            <button class="btn vendor-upload-btn">Upload</button>
                                            <input type="file" data-existingfile="@Model.EditPurchase.AttachFile2" class="form-control" name="AttachFile-2" id="AttachFile-2" accept=".pdf,.doc,.docx">
                                        </div>

                                        @{
                                            var showAttchemnt2 = "disaply:block";
                                        }

                                        @if (string.IsNullOrWhiteSpace(@Model.EditPurchase.AttachFile3))
                                        {
                                            showAttchemnt2 = "disaply:none";
                                        }

                                        <a style="@showAttchemnt2" class="itp_filepath attchedfile-2" href="/purchase/@Model.EditPurchase.AttachFile2" target="_blank">@Model.EditPurchase.AttachFile2</a><br />

                                        <div class="invalid-feedback">Attach File is required.</div>
                                        <small style="font-size: 12px; float: left; margin-top: -5px; color: #3E78CF; ">File supported PDF, DOCS of 2MB</small>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-3 col-md-6" style="padding-left: 0px;">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="VendorName-3">Vendor Name</label>
                                        <div class="d-flex">
                                            <select name="VendorName-3" class="VendorName form-control form-select" id="VendorName-3">
                                                <option value="" disabled selected hidden>Select Vendor Name</option>
                                                @foreach (var vendor in Model.allVendors)
                                                {
                                                    var selected = !string.IsNullOrEmpty(Model.EditPurchase?.VendorName3) && Model.EditPurchase.VendorName3 == vendor.VendorName ? "selected" : "";
                                                    <option value="@vendor.VedorID" @selected>@vendor.VendorName - @vendor.VedorID</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="QuotationPrice-3">Quotation Price</label>
                                        <input type="text" value="@Model.EditPurchase.QuotationPrice3" class="form-control" name="QuotationPrice-3" id="QuotationPrice-3" placeholder="Enter Quotation Price">
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-6">
                                    <div class="form-group purchaseadd-tabs">
                                        <label for="AttachFile-3" style="width:100%;">Attach File</label>
                                        <div class="upload-btn-wrapper attach3wrapper">
                                            <button class="btn vendor-upload-btn">Upload</button>
                                            <input type="file" value="" class="form-control" name="AttachFile-3" id="AttachFile-3" data-existingfile="@Model.EditPurchase.AttachFile3" accept=".pdf,.doc,.docx">
                                        </div>
                                        @{
                                            var showAttchemnt3 = "disaply:block";
                                        }

                                        @if (string.IsNullOrWhiteSpace(@Model.EditPurchase.AttachFile3))
                                        {
                                            showAttchemnt3 = "disaply:none";
                                        }

                                        <a style="@showAttchemnt3" class="itp_filepath attchedfile-3" href="/purchase/@Model.EditPurchase.AttachFile3" target="_blank">@Model.EditPurchase.AttachFile3</a><br />

                                        <div class="invalid-feedback">Attach File is required.</div>
                                        <small style="font-size: 12px; float: left; margin-top: -5px; color: #3E78CF; ">File supported PDF, DOCS of 2MB</small>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-12 col-md-12 text-right">
                                    <button type="button" class="btn vendoradd-Cancel">Cancel</button>
                                    <button type="button" class="btn btn-primary vendoradd-Submit">Submit</button>
                                </div>
                            </div>
                        </div>
                    </form>
                    @*Success Modal*@
                    <div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="successModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="successModalLabel">Success</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body modal-message">
                                    Success message will be inserted here
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Error Modal*@
                    <div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="errorModalLabel">Error</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body modal-message">
                                    Error message will be inserted here
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('.AssetType, .Requestedby, .VendorName').select2();

        //function Attchemnet1Validation() {
        //    let isValid = true;
        //    var fileInput = $('#AttachFile-1');
        //    var file = fileInput[0].files[0];
        //    var parentDiv = fileInput.closest('.form-group');
        //    $('.attach1wrapper').css('border', '');

        //    // Check if a file is selected
        //    if (!file) {
        //        parentDiv.addClass('is-invalid');
        //        fileInput.addClass('is-invalid');
        //        $('.attach1wrapper').css('border', '1px solid red');
        //        parentDiv.find('.invalid-feedback').text('Attach File is required.').show();
        //        isValid = false;
        //    } else {
        //        // Validate file type and size
        //        var allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
        //        var maxSize = 2 * 1024 * 1024; // 2MB

        //        if ($.inArray(file.type, allowedTypes) === -1 || file.size > maxSize) {
        //            parentDiv.addClass('is-invalid');
        //            fileInput.addClass('is-invalid');
        //            parentDiv.find('.invalid-feedback').text('Invalid file type or size. Please upload a PDF or DOC file less than 2MB.').show();
        //            isValid = false;
        //            $('.attach1wrapper').css('border', '1px solid red');
        //        } else {
        //            parentDiv.removeClass('is-invalid');
        //            fileInput.removeClass('is-invalid');
        //            parentDiv.find('.invalid-feedback').hide();
        //            $('.attach1wrapper').css('border', '');
        //        }
        //    }

        //    return isValid;
        //}


        $('#AttachFile-1').on('change', function () {
            var isValid = AttchemnetValidation($(this), true, "attach1wrapper", "#AttachFile-1");
            $(this).attr("data-existingfile", "");
            if (isValid) {
                var fileInput1 = $('#AttachFile-1');
                var file = fileInput1[0].files[0];
                if (file) {
                    var fileName = file.name;
                    var fileUrl = URL.createObjectURL(file);

                    $('.attchedfile-1').attr('href', fileUrl).text(fileName).show();
                } else {
                    $('.attchedfile-1').hide();
                }
                console.log("Attach1 File validation passed.");
            } else {
                console.log("Attach1 validation failed.");
            }
        });

        $('#AttachFile-2').on('change', function () {
            var isValid = AttchemnetValidation($(this), true, "attach2wrapper", "#AttachFile-2");
            $(this).attr("data-existingfile", "");
            if (isValid) {
                var fileInput2 = $('#AttachFile-2');
                var file = fileInput2[0].files[0];
                if (file) {
                    var fileName = file.name;
                    var fileUrl = URL.createObjectURL(file);

                    $('.attchedfile-2').attr('href', fileUrl).text(fileName).show();
                } else {
                    $('.attchedfile-2').hide();
                }
                console.log("Attach2 File validation passed.");
            } else {
                console.log("Attach2 validation failed.");
            }
        });

        $('#AttachFile-3').on('change', function () {
            var isValid = AttchemnetValidation($(this), true, "attach3wrapper", "#AttachFile-3");
            $(this).attr("data-existingfile", "");
            if (isValid) {
                var fileInput3 = $('#AttachFile-3');
                var file = fileInput3[0].files[0];
                if (file) {
                    var fileName = file.name;
                    var fileUrl = URL.createObjectURL(file);

                    $('.attchedfile-3').attr('href', fileUrl).text(fileName).show();
                } else {
                    $('.attchedfile-3').hide();
                }
                console.log("Attach3 File validation passed.");
            } else {
                console.log("Attach3 validation failed.");
            }
        });


        function AttchemnetValidation(fileInput, validationRequired, attachwrapper, filefieldid) {

            let isValid = true;
            if ($(filefieldid).attr("data-existingfile") != "") {
                return isValid;
            }

            var file = fileInput[0].files[0];
            var parentDiv = fileInput.closest('.form-group');

            // Use the attachwrapper parameter instead of a hardcoded class name
            $('.' + attachwrapper).css('border', '');

            if (validationRequired) {
                if (!file) {
                    parentDiv.addClass('is-invalid');
                    fileInput.addClass('is-invalid');
                    // Apply the border to the dynamic attachwrapper class
                    $('.' + attachwrapper).css('border', '1px solid red');
                    parentDiv.find('.invalid-feedback').text('Attach File is required.').show();
                    isValid = false;
                }
            }

            if (file) {
                var allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
                var maxSize = 2 * 1024 * 1024; // 2MB

                if ($.inArray(file.type, allowedTypes) === -1 || file.size > maxSize) {
                    parentDiv.addClass('is-invalid');
                    fileInput.addClass('is-invalid');
                    parentDiv.find('.invalid-feedback').text('Invalid file type or size. Please upload a PDF or DOC file less than 2MB.').show();
                    // Apply the border to the dynamic attachwrapper class
                    $('.' + attachwrapper).css('border', '1px solid red');
                    isValid = false;
                } else {
                    parentDiv.removeClass('is-invalid');
                    fileInput.removeClass('is-invalid');
                    parentDiv.find('.invalid-feedback').hide();
                    // Remove the border from the dynamic attachwrapper class
                    $('.' + attachwrapper).css('border', '');
                }
            }
            return isValid;
        }



        $('.vendoradd-Submit').on('click', function (event) {
            event.preventDefault();
            let isValid = true;
            var formData = new FormData();

            if ($('#PurchaseID').val().trim() === '') {
                $('#PurchaseID').addClass('is-invalid');
                isValid = false;
            } else {
                $('#PurchaseID').removeClass('is-invalid');
            }

            if ($('#AssetType').val() === null || $('#AssetType').val() === "") {
                $('#AssetType').next('.select2-container').addClass('is-invalid');
                $('#AssetType').next('.select2-container').css('border', '1px solid red');

            } else {
                $('#AssetType').next('.select2-container').removeClass('is-invalid');
                $('#AssetType').next('.select2-container').css('border', '');
            }

            if ($('#RequiredOn').val().trim() === '') {
                $('#RequiredOn').addClass('is-invalid');
                isValid = false;
            } else {
                $('#RequiredOn').removeClass('is-invalid');
            }

            if ($('#Requestedby').val() === null || $('#Requestedby').val() === "") {
                $('#Requestedby').next('.select2-container').addClass('is-invalid');
                $('#Requestedby').next('.select2-container').css('border', '1px solid red');

            } else {
                $('#Requestedby').next('.select2-container').removeClass('is-invalid');
                $('#Requestedby').next('.select2-container').css('border', '');
            }

            if ($('#VendorName-1').val() === null || $('#VendorName-1').val() === "") {
                $('#VendorName-1').next('.select2-container').addClass('is-invalid');
                $('#VendorName-1').next('.select2-container').css('border', '1px solid red');

            } else {
                $('#VendorName-1').next('.select2-container').removeClass('is-invalid');
                $('#VendorName-1').next('.select2-container').css('border', '');
            }

            if ($('#QuotationPrice-1').val().trim() == '0') {
                $('#QuotationPrice-1').addClass('is-invalid');
                isValid = false;
            } else {
                $('#QuotationPrice-1').removeClass('is-invalid');
            }

            var fileInput1 = $('#AttachFile-1');
            var AttchmentValidated = AttchemnetValidation(fileInput1, true, "attach1wrapper", "#AttachFile-1");

            if (AttchmentValidated == false) {
                isValid = false;
            }

            // If the form is valid, submit the form via AJAX
            if (isValid) {
                formData.append('PRNumber', $('#PurchaseID').val().trim());
                formData.append('AssetType', $('#AssetType').val().trim());
                formData.append('RequiredOn', $('#RequiredOn').val().trim());
                formData.append('Requestedby', $('#Requestedby').val().trim());

                formData.append('Vendorname1', $('#select2-VendorName-1-container').text());
                formData.append('Vendor1quotation', $('#QuotationPrice-1').val().trim());
                var fileInput1 = $('#AttachFile-1');
                var file1 = fileInput1[0].files[0];
                formData.append('AttachFile-1', file1);

                formData.append('Vendorname2', $('#select2-VendorName-2-container').text());
                formData.append('Vendor2quotation', $('#QuotationPrice-2').val().trim());
                var fileInput2 = $('#AttachFile-2');
                var file2 = fileInput2[0].files[0];
                formData.append('AttachFile-2', file2);

                formData.append('Vendorname3', $('#select2-VendorName-3-container').text());
                formData.append('Vendor3quotation', $('#QuotationPrice-3').val().trim());
                var fileInput3 = $('#AttachFile-3');
                var file3 = fileInput3[0].files[0];
                formData.append('AttachFile-3', file3);

                $.ajax({
                    url: '/purchase/addpurchaserequest',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.StatusCode === 200) {
                            $('.modal-message').text(response.Message);
                            $('#successModal').modal('show');
                        } else {
                            $('.modal-message').text(response.Message);
                            $('#errorModal').modal('show');
                        }
                    },
                    error: function (xhr, status, error) {
                        $('.modal-message').text('An error occurred while processing your request. Please try again.');
                        $('#errorModal').modal('show');
                    }
                });
            }
        });

        // Reset form on cancel
        $('.vendoradd-Cancel').on('click', function () {
            $('#purchase-form')[0].reset();
            $('.form-control').removeClass('is-invalid');
        });
    });



</script>
