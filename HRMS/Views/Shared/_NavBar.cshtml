<style>
    .navbar-nav .nav-item {
        position: relative;
    }

    .profile-image-container {
        width: 55px; /* Adjust the width of the circular container */
        height: 55px; /* Adjust the height of the circular container */
        border-radius: 50%;
        overflow: hidden;
        margin-right: 10px; /* Add some spacing between image and text */
    }

        .profile-image-container img {
            width: 100%; /* Make sure the image fills the circular container */
            height: auto; /* Maintain aspect ratio */
            border-radius: 50%;
        }

    .navbar-name {
        /* Add necessary styles for navbar name */
    }

</style>

<nav class="navbar navbar-expand-md navbar-light bg-light fixed-top" style="box-shadow: 0 0 10px 2px rgba(0, 0, 0, .3); height: 55px;">
    <a class="navbar-brand" href="#"><img src="~/Assets/AMBC_Logo.png" alt="logo" class="logo-img" /></a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
            <li class="nav-item" id="navbar-profile">
                @{

                    var currentContext = HRMS.Helpers.SiteContext.GetCurrentUserContext();
                }

                @if (!string.IsNullOrWhiteSpace(currentContext.EmpInfo.imagepath))
                {
                    var empImageURl = System.Configuration.ConfigurationManager.AppSettings["EmpImagesFolder"] + "/" + currentContext.EmpInfo.imagepath;
                    <img src="@empImageURl" alt="Employee Image" class="profile img-fluid nav-image-profile" style=" width: 40px; height: 40px; border-radius: 50%;">
                }
                else
                {
                    <img src="" alt="Employee Image" class="profile img-fluid nav-profile nav-image-profile" style=" width: 40px; height: 40px; border-radius: 50%; display: none">

                    // Split the full name into first name and last name
                    string[] names = currentContext.EmpInfo.EmployeeName.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);

                    // Ensure we have at least one name
                    if (names.Length > 0)
                    {
                        // Get the first name
                        string firstName = names[0];

                        // Get the last name if available
                        string lastName = names.Length > 1 ? names[names.Length - 1] : string.Empty;

                        // Extract the first letters
                        char firstLetterOfFirstName = firstName[0];
                        char firstLetterOfLastName = !string.IsNullOrEmpty(lastName) ? lastName[0] : '\0';

                        // Convert to uppercase if needed
                        firstLetterOfFirstName = char.ToUpper(firstLetterOfFirstName);
                        firstLetterOfLastName = char.ToUpper(firstLetterOfLastName);

                        // Output the first letters
                        Console.WriteLine($"First letter of first name: {firstLetterOfFirstName}");
                        Console.WriteLine($"First letter of last name: {firstLetterOfLastName}");

                        <div class="default-image-navbar">@firstLetterOfFirstName @firstLetterOfLastName</div>

                    }
                }

                <p class="navbar-name">@currentContext.LoginInfo.EmployeeRole</p>
                <select id="profile-nav" name="profile" class="form-control">
                    <option value="" disabled selected hidden></option>
                    <option value="option1">option1</option>
                    <option value="option2">option2</option>
                </select>
            </li>


        </ul>
    </div>
</nav>
